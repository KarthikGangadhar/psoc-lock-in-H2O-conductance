ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_1_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_1_Init, %function
  25              	UART_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_1.c"
   1:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1.c **** *
   5:Generated_Source\PSoC5/UART_1.c **** * Description:
   6:Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_1.c **** *
   8:Generated_Source\PSoC5/UART_1.c **** * Note:
   9:Generated_Source\PSoC5/UART_1.c **** *
  10:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_1.c **** 
  17:Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_1.c **** 
  22:Generated_Source\PSoC5/UART_1.c **** 
  23:Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_1.c **** 
  27:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC5/UART_1.c **** 
  29:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 2


  31:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_1.c **** 
  35:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_1.c **** 
  48:Generated_Source\PSoC5/UART_1.c **** 
  49:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_1.c **** *
  53:Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC5/UART_1.c **** *
  59:Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_1.c **** *  None.
  61:Generated_Source\PSoC5/UART_1.c **** *
  62:Generated_Source\PSoC5/UART_1.c **** * Return:
  63:Generated_Source\PSoC5/UART_1.c **** *  None.
  64:Generated_Source\PSoC5/UART_1.c **** *
  65:Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC5/UART_1.c **** *
  72:Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_1.c **** *  No.
  74:Generated_Source\PSoC5/UART_1.c **** *
  75:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC5/UART_1.c **** {
  78:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  80:Generated_Source\PSoC5/UART_1.c ****     {
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  82:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  83:Generated_Source\PSoC5/UART_1.c ****     }
  84:Generated_Source\PSoC5/UART_1.c **** 
  85:Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  86:Generated_Source\PSoC5/UART_1.c **** }
  87:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 3


  88:Generated_Source\PSoC5/UART_1.c **** 
  89:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_1.c **** *
  93:Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_1.c **** *
  99:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_1.c **** *  None.
 101:Generated_Source\PSoC5/UART_1.c **** *
 102:Generated_Source\PSoC5/UART_1.c **** * Return:
 103:Generated_Source\PSoC5/UART_1.c **** *  None.
 104:Generated_Source\PSoC5/UART_1.c **** *
 105:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC5/UART_1.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_1.c **** 
 110:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_1.c **** 
 117:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_1.c **** 
 123:Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_1.c **** 
 129:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
  36              		.loc 1 132 0
  37 0002 0949     		ldr	r1, .L3
  38 0004 0120     		movs	r0, #1
  39 0006 FFF7FEFF 		bl	CyIntSetVector
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 4


  40              	.LVL0:
 133:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
  41              		.loc 1 133 0
  42 000a 0721     		movs	r1, #7
  43 000c 0120     		movs	r0, #1
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 134:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_1.c **** 
 136:Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  46              		.loc 1 138 0
  47 0012 0622     		movs	r2, #6
  48 0014 054B     		ldr	r3, .L3+4
  49 0016 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  50              		.loc 1 139 0
  51 0018 4722     		movs	r2, #71
  52 001a 1033     		adds	r3, r3, #16
  53 001c 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_1.c ****         #else
 142:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_1.c **** 
 146:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
  54              		.loc 1 148 0
  55 001e 0222     		movs	r2, #2
  56 0020 5133     		adds	r3, r3, #81
  57 0022 1A70     		strb	r2, [r3]
  58 0024 08BD     		pop	{r3, pc}
  59              	.L4:
  60 0026 00BF     		.align	2
  61              	.L3:
  62 0028 00000000 		.word	UART_1_TXISR
  63 002c 24650040 		.word	1073767716
  64              		.cfi_endproc
  65              	.LFE1:
  66              		.size	UART_1_Init, .-UART_1_Init
  67              		.section	.text.UART_1_Enable,"ax",%progbits
  68              		.align	2
  69              		.global	UART_1_Enable
  70              		.thumb
  71              		.thumb_func
  72              		.type	UART_1_Enable, %function
  73              	UART_1_Enable:
  74              	.LFB2:
 149:Generated_Source\PSoC5/UART_1.c ****         #else
 150:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_1.c **** 
 153:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 5


 155:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_1.c **** }
 161:Generated_Source\PSoC5/UART_1.c **** 
 162:Generated_Source\PSoC5/UART_1.c **** 
 163:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_1.c **** *
 167:Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:Generated_Source\PSoC5/UART_1.c **** 
 173:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_1.c **** *  None.
 175:Generated_Source\PSoC5/UART_1.c **** *
 176:Generated_Source\PSoC5/UART_1.c **** * Return:
 177:Generated_Source\PSoC5/UART_1.c **** *  None.
 178:Generated_Source\PSoC5/UART_1.c **** *
 179:Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_1.c **** *
 182:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC5/UART_1.c **** {
  75              		.loc 1 184 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 08B5     		push	{r3, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 3, -8
  82              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  83              		.loc 1 186 0
  84 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  85              	.LVL2:
 187:Generated_Source\PSoC5/UART_1.c **** 
 188:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 191:Generated_Source\PSoC5/UART_1.c **** 
 192:Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:Generated_Source\PSoC5/UART_1.c **** 
 195:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC5/UART_1.c **** 
 198:Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 6


 201:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_1.c **** 
 204:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_1.c **** 
 210:Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
  86              		.loc 1 211 0
  87 0006 074A     		ldr	r2, .L7
  88 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  89 000a 43F01003 		orr	r3, r3, #16
  90 000e 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
  91              		.loc 1 213 0
  92 0010 0223     		movs	r3, #2
  93 0012 054A     		ldr	r2, .L7+4
  94 0014 1360     		str	r3, [r2]
 214:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
  95              		.loc 1 214 0
  96 0016 A2F5C072 		sub	r2, r2, #384
  97 001a 1360     		str	r3, [r2]
 215:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_1.c **** 
 218:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_1.c **** 
 222:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
  98              		.loc 1 222 0
  99 001c FFF7FEFF 		bl	CyExitCriticalSection
 100              	.LVL3:
 101 0020 08BD     		pop	{r3, pc}
 102              	.L8:
 103 0022 00BF     		.align	2
 104              	.L7:
 105 0024 95650040 		.word	1073767829
 106 0028 80E200E0 		.word	-536812928
 107              		.cfi_endproc
 108              	.LFE2:
 109              		.size	UART_1_Enable, .-UART_1_Enable
 110              		.section	.text.UART_1_Start,"ax",%progbits
 111              		.align	2
 112              		.global	UART_1_Start
 113              		.thumb
 114              		.thumb_func
 115              		.type	UART_1_Start, %function
 116              	UART_1_Start:
 117              	.LFB0:
  77:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
 118              		.loc 1 77 0
 119              		.cfi_startproc
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 7


 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART_1.c ****     {
 126              		.loc 1 79 0
 127 0002 054B     		ldr	r3, .L12
 128 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 129 0006 23B9     		cbnz	r3, .L10
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
 130              		.loc 1 81 0
 131 0008 FFF7FEFF 		bl	UART_1_Init
 132              	.LVL4:
  82:Generated_Source\PSoC5/UART_1.c ****     }
 133              		.loc 1 82 0
 134 000c 0122     		movs	r2, #1
 135 000e 024B     		ldr	r3, .L12
 136 0010 1A70     		strb	r2, [r3]
 137              	.L10:
  85:Generated_Source\PSoC5/UART_1.c **** }
 138              		.loc 1 85 0
 139 0012 FFF7FEFF 		bl	UART_1_Enable
 140              	.LVL5:
 141 0016 08BD     		pop	{r3, pc}
 142              	.L13:
 143              		.align	2
 144              	.L12:
 145 0018 00000000 		.word	.LANCHOR0
 146              		.cfi_endproc
 147              	.LFE0:
 148              		.size	UART_1_Start, .-UART_1_Start
 149              		.section	.text.UART_1_Stop,"ax",%progbits
 150              		.align	2
 151              		.global	UART_1_Stop
 152              		.thumb
 153              		.thumb_func
 154              		.type	UART_1_Stop, %function
 155              	UART_1_Stop:
 156              	.LFB3:
 223:Generated_Source\PSoC5/UART_1.c **** }
 224:Generated_Source\PSoC5/UART_1.c **** 
 225:Generated_Source\PSoC5/UART_1.c **** 
 226:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_1.c **** *
 230:Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_1.c **** *
 233:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_1.c **** *  None.
 235:Generated_Source\PSoC5/UART_1.c **** *
 236:Generated_Source\PSoC5/UART_1.c **** * Return:
 237:Generated_Source\PSoC5/UART_1.c **** *  None.
 238:Generated_Source\PSoC5/UART_1.c **** *
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 8


 239:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC5/UART_1.c **** {
 157              		.loc 1 241 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161 0000 08B5     		push	{r3, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 3, -8
 164              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 165              		.loc 1 243 0
 166 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 167              	.LVL6:
 244:Generated_Source\PSoC5/UART_1.c **** 
 245:Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 248:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_1.c **** 
 250:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_1.c **** 
 256:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_1.c **** 
 260:Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:Generated_Source\PSoC5/UART_1.c **** 
 264:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_1.c **** 
 269:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 168              		.loc 1 270 0
 169 0006 054A     		ldr	r2, .L16
 170 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 171 000a 03F0EF03 		and	r3, r3, #239
 172 000e 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_1.c **** 
 272:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 173              		.loc 1 273 0
 174 0010 0222     		movs	r2, #2
 175 0012 034B     		ldr	r3, .L16+4
 176 0014 1A60     		str	r2, [r3]
 274:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 9


 276:Generated_Source\PSoC5/UART_1.c **** 
 277:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 177              		.loc 1 277 0
 178 0016 FFF7FEFF 		bl	CyExitCriticalSection
 179              	.LVL7:
 180 001a 08BD     		pop	{r3, pc}
 181              	.L17:
 182              		.align	2
 183              	.L16:
 184 001c 95650040 		.word	1073767829
 185 0020 80E100E0 		.word	-536813184
 186              		.cfi_endproc
 187              	.LFE3:
 188              		.size	UART_1_Stop, .-UART_1_Stop
 189              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 190              		.align	2
 191              		.global	UART_1_ReadControlRegister
 192              		.thumb
 193              		.thumb_func
 194              		.type	UART_1_ReadControlRegister, %function
 195              	UART_1_ReadControlRegister:
 196              	.LFB4:
 278:Generated_Source\PSoC5/UART_1.c **** }
 279:Generated_Source\PSoC5/UART_1.c **** 
 280:Generated_Source\PSoC5/UART_1.c **** 
 281:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_1.c **** *
 285:Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_1.c **** *
 288:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_1.c **** *  None.
 290:Generated_Source\PSoC5/UART_1.c **** *
 291:Generated_Source\PSoC5/UART_1.c **** * Return:
 292:Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_1.c **** *
 294:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_1.c **** {
 197              		.loc 1 296 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_1.c ****         return(0u);
 299:Generated_Source\PSoC5/UART_1.c ****     #else
 300:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_1.c **** }
 202              		.loc 1 302 0
 203 0000 0020     		movs	r0, #0
 204 0002 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE4:
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 10


 207              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 208              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 209              		.align	2
 210              		.global	UART_1_WriteControlRegister
 211              		.thumb
 212              		.thumb_func
 213              		.type	UART_1_WriteControlRegister, %function
 214              	UART_1_WriteControlRegister:
 215              	.LFB5:
 303:Generated_Source\PSoC5/UART_1.c **** 
 304:Generated_Source\PSoC5/UART_1.c **** 
 305:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_1.c **** *
 309:Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_1.c **** *
 312:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_1.c **** *
 315:Generated_Source\PSoC5/UART_1.c **** * Return:
 316:Generated_Source\PSoC5/UART_1.c **** *  None.
 317:Generated_Source\PSoC5/UART_1.c **** *
 318:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_1.c **** {
 216              		.loc 1 320 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221              	.LVL8:
 222 0000 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE5:
 225              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 226 0002 00BF     		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 227              		.align	2
 228              		.global	UART_1_SetTxInterruptMode
 229              		.thumb
 230              		.thumb_func
 231              		.type	UART_1_SetTxInterruptMode, %function
 232              	UART_1_SetTxInterruptMode:
 233              	.LFB6:
 321:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_1.c ****         {
 324:Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_1.c ****         }
 326:Generated_Source\PSoC5/UART_1.c ****     #else
 327:Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_1.c **** }
 330:Generated_Source\PSoC5/UART_1.c **** 
 331:Generated_Source\PSoC5/UART_1.c **** 
 332:Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 11


 333:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_1.c ****     *
 337:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_1.c ****     *
 340:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_1.c ****     *
 352:Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:Generated_Source\PSoC5/UART_1.c ****     *
 355:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_1.c ****     *
 358:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_1.c ****     {
 361:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 362:Generated_Source\PSoC5/UART_1.c ****     }
 363:Generated_Source\PSoC5/UART_1.c **** 
 364:Generated_Source\PSoC5/UART_1.c **** 
 365:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_1.c ****     *
 369:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_1.c ****     *
 373:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:Generated_Source\PSoC5/UART_1.c ****     *
 376:Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_1.c ****     *
 379:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_1.c ****     *
 388:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_1.c ****     *  No.
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 12


 390:Generated_Source\PSoC5/UART_1.c ****     *
 391:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_1.c ****     {
 394:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_1.c **** 
 396:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_1.c **** 
 398:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_1.c **** 
 401:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC5/UART_1.c **** 
 404:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_1.c **** 
 407:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_1.c ****         {
 409:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_1.c **** 
 412:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_1.c ****             {
 414:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_1.c ****             }
 416:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_1.c **** 
 419:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_1.c ****             {
 421:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_1.c ****                             */
 430:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_1.c ****                         }
 432:Generated_Source\PSoC5/UART_1.c ****                     #else
 433:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_1.c ****             }
 437:Generated_Source\PSoC5/UART_1.c ****         }
 438:Generated_Source\PSoC5/UART_1.c ****         else
 439:Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_1.c ****         }
 442:Generated_Source\PSoC5/UART_1.c **** 
 443:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC5/UART_1.c **** 
 445:Generated_Source\PSoC5/UART_1.c ****     #else
 446:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 13


 447:Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 449:Generated_Source\PSoC5/UART_1.c **** 
 450:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_1.c **** 
 452:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_1.c ****     }
 454:Generated_Source\PSoC5/UART_1.c **** 
 455:Generated_Source\PSoC5/UART_1.c **** 
 456:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_1.c ****     *
 460:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_1.c ****     *
 464:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:Generated_Source\PSoC5/UART_1.c ****     *
 467:Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_1.c ****     *
 470:Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_1.c ****     *
 476:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_1.c ****     *
 484:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_1.c ****     {
 487:Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_1.c **** 
 489:Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:Generated_Source\PSoC5/UART_1.c **** 
 491:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_1.c ****         {
 494:Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_1.c ****         }
 497:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_1.c **** 
 499:Generated_Source\PSoC5/UART_1.c ****         return(status);
 500:Generated_Source\PSoC5/UART_1.c ****     }
 501:Generated_Source\PSoC5/UART_1.c **** 
 502:Generated_Source\PSoC5/UART_1.c **** 
 503:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 14


 504:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_1.c ****     *
 507:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_1.c ****     *
 512:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:Generated_Source\PSoC5/UART_1.c ****     *
 515:Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_1.c ****     *
 519:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_1.c ****     *
 528:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:Generated_Source\PSoC5/UART_1.c ****     *
 531:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC5/UART_1.c ****     {
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_1.c **** 
 537:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_1.c **** 
 541:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC5/UART_1.c **** 
 544:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_1.c **** 
 547:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_1.c ****         {
 549:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_1.c ****             {
 553:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_1.c ****             }
 555:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_1.c **** 
 558:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_1.c ****             {
 560:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 15


 561:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_1.c ****                             */
 569:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_1.c ****                         }
 571:Generated_Source\PSoC5/UART_1.c ****                     #else
 572:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_1.c ****             }
 576:Generated_Source\PSoC5/UART_1.c **** 
 577:Generated_Source\PSoC5/UART_1.c ****         }
 578:Generated_Source\PSoC5/UART_1.c ****         else
 579:Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_1.c ****                 {
 587:Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_1.c ****                 }
 589:Generated_Source\PSoC5/UART_1.c ****             }
 590:Generated_Source\PSoC5/UART_1.c ****         }
 591:Generated_Source\PSoC5/UART_1.c **** 
 592:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC5/UART_1.c **** 
 594:Generated_Source\PSoC5/UART_1.c ****     #else
 595:Generated_Source\PSoC5/UART_1.c **** 
 596:Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART_1.c ****         {
 599:Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:Generated_Source\PSoC5/UART_1.c **** 
 602:Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_1.c ****             {
 606:Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART_1.c ****             }
 608:Generated_Source\PSoC5/UART_1.c ****         }
 609:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_1.c **** 
 611:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_1.c ****     }
 613:Generated_Source\PSoC5/UART_1.c **** 
 614:Generated_Source\PSoC5/UART_1.c **** 
 615:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 16


 618:Generated_Source\PSoC5/UART_1.c ****     *
 619:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_1.c ****     *
 623:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:Generated_Source\PSoC5/UART_1.c ****     *
 626:Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_1.c ****     *
 630:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:Generated_Source\PSoC5/UART_1.c ****     *
 633:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC5/UART_1.c ****     {
 636:Generated_Source\PSoC5/UART_1.c ****         
 637:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC5/UART_1.c ****     #else
 646:Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_1.c ****         
 649:Generated_Source\PSoC5/UART_1.c ****     }
 650:Generated_Source\PSoC5/UART_1.c **** 
 651:Generated_Source\PSoC5/UART_1.c **** 
 652:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_1.c ****     *
 656:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:Generated_Source\PSoC5/UART_1.c ****     *
 664:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:Generated_Source\PSoC5/UART_1.c ****     *
 667:Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_1.c ****     *
 671:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 17


 675:Generated_Source\PSoC5/UART_1.c ****     *
 676:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:Generated_Source\PSoC5/UART_1.c ****     *
 679:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_1.c ****     *
 682:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_1.c ****                                                             
 685:Generated_Source\PSoC5/UART_1.c ****     {
 686:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_1.c **** 
 688:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_1.c **** 
 690:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC5/UART_1.c **** 
 693:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_1.c ****         {
 695:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_1.c ****             {
 697:Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_1.c ****             }
 699:Generated_Source\PSoC5/UART_1.c ****             else
 700:Generated_Source\PSoC5/UART_1.c ****             {
 701:Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_1.c ****             }
 703:Generated_Source\PSoC5/UART_1.c ****         }
 704:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_1.c ****         {
 706:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC5/UART_1.c ****         }
 708:Generated_Source\PSoC5/UART_1.c ****         else
 709:Generated_Source\PSoC5/UART_1.c ****         {
 710:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_1.c ****         }
 712:Generated_Source\PSoC5/UART_1.c **** 
 713:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC5/UART_1.c **** 
 715:Generated_Source\PSoC5/UART_1.c ****     #else
 716:Generated_Source\PSoC5/UART_1.c **** 
 717:Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART_1.c **** 
 720:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_1.c **** 
 722:Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:Generated_Source\PSoC5/UART_1.c ****     }
 724:Generated_Source\PSoC5/UART_1.c **** 
 725:Generated_Source\PSoC5/UART_1.c **** 
 726:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_1.c ****     *
 730:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 18


 732:Generated_Source\PSoC5/UART_1.c ****     *
 733:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:Generated_Source\PSoC5/UART_1.c ****     *
 736:Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:Generated_Source\PSoC5/UART_1.c ****     *
 739:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_1.c ****     *
 745:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:Generated_Source\PSoC5/UART_1.c ****     *
 748:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_1.c ****     *
 753:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_1.c ****     *
 756:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_1.c ****     {
 759:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_1.c **** 
 761:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 763:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 764:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART_1.c **** 
 767:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_1.c **** 
 769:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC5/UART_1.c **** 
 772:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_1.c **** 
 777:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC5/UART_1.c **** 
 779:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_1.c **** 
 781:Generated_Source\PSoC5/UART_1.c ****     }
 782:Generated_Source\PSoC5/UART_1.c **** 
 783:Generated_Source\PSoC5/UART_1.c **** 
 784:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_1.c ****     *
 788:Generated_Source\PSoC5/UART_1.c ****     * Summary:
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 19


 789:Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_1.c ****     *
 792:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_1.c ****     *
 804:Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:Generated_Source\PSoC5/UART_1.c ****     *
 807:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_1.c ****     *
 812:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_1.c ****                                                         
 815:Generated_Source\PSoC5/UART_1.c ****     {
 816:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_1.c ****                 {
 820:Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_1.c ****                 }
 822:Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_1.c **** 
 828:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_1.c ****             {
 837:Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_1.c ****             }
 839:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_1.c ****     }
 841:Generated_Source\PSoC5/UART_1.c **** 
 842:Generated_Source\PSoC5/UART_1.c **** 
 843:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 20


 846:Generated_Source\PSoC5/UART_1.c ****     *
 847:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_1.c ****     *
 850:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_1.c ****     *
 853:Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:Generated_Source\PSoC5/UART_1.c ****     *
 856:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_1.c ****     {
 859:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 860:Generated_Source\PSoC5/UART_1.c ****     }
 861:Generated_Source\PSoC5/UART_1.c **** 
 862:Generated_Source\PSoC5/UART_1.c **** 
 863:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_1.c ****     *
 867:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_1.c ****     *
 870:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_1.c ****     *
 873:Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:Generated_Source\PSoC5/UART_1.c ****     *
 876:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_1.c ****     {
 879:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 880:Generated_Source\PSoC5/UART_1.c ****     }
 881:Generated_Source\PSoC5/UART_1.c **** 
 882:Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_1.c **** 
 884:Generated_Source\PSoC5/UART_1.c **** 
 885:Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_1.c ****     *
 890:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_1.c ****     *
 894:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_1.c ****     *
 901:Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:Generated_Source\PSoC5/UART_1.c ****     *  None.
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 21


 903:Generated_Source\PSoC5/UART_1.c ****     *
 904:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_1.c ****     *
 907:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_1.c ****     {
 234              		.loc 1 909 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL9:
 910:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 240              		.loc 1 910 0
 241 0000 014B     		ldr	r3, .L21
 242 0002 1870     		strb	r0, [r3]
 243 0004 7047     		bx	lr
 244              	.L22:
 245 0006 00BF     		.align	2
 246              	.L21:
 247 0008 85650040 		.word	1073767813
 248              		.cfi_endproc
 249              	.LFE6:
 250              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 251              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 252              		.align	2
 253              		.global	UART_1_WriteTxData
 254              		.thumb
 255              		.thumb_func
 256              		.type	UART_1_WriteTxData, %function
 257              	UART_1_WriteTxData:
 258              	.LFB7:
 911:Generated_Source\PSoC5/UART_1.c ****     }
 912:Generated_Source\PSoC5/UART_1.c **** 
 913:Generated_Source\PSoC5/UART_1.c **** 
 914:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_1.c ****     *
 918:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_1.c ****     *
 923:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_1.c ****     *
 926:Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:Generated_Source\PSoC5/UART_1.c ****     * None.
 928:Generated_Source\PSoC5/UART_1.c ****     *
 929:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 22


 935:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_1.c ****     *
 938:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:Generated_Source\PSoC5/UART_1.c ****     *
 941:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_1.c ****     {
 259              		.loc 1 943 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL10:
 944:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 265              		.loc 1 945 0
 266 0000 114B     		ldr	r3, .L28
 267 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 268 0004 F3B1     		cbz	r3, .L23
 946:Generated_Source\PSoC5/UART_1.c ****         {
 947:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_1.c **** 
 949:Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 269              		.loc 1 950 0
 270 0006 0222     		movs	r2, #2
 271 0008 104B     		ldr	r3, .L28+4
 272 000a 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/UART_1.c **** 
 952:Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 273              		.loc 1 952 0
 274 000c 0E4A     		ldr	r2, .L28
 275 000e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 276 0010 DBB2     		uxtb	r3, r3
 277 0012 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 278 0014 9342     		cmp	r3, r2
 279 0016 07D1     		bne	.L25
 953:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 280              		.loc 1 953 0 discriminator 1
 281 0018 0D4B     		ldr	r3, .L28+8
 282 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 283              		.loc 1 952 0 discriminator 1
 284 001c 13F0040F 		tst	r3, #4
 285 0020 02D1     		bne	.L25
 954:Generated_Source\PSoC5/UART_1.c ****             {
 955:Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 286              		.loc 1 956 0
 287 0022 0C4B     		ldr	r3, .L28+12
 288 0024 1870     		strb	r0, [r3]
 289 0026 0AE0     		b	.L26
 290              	.L25:
 957:Generated_Source\PSoC5/UART_1.c ****             }
 958:Generated_Source\PSoC5/UART_1.c ****             else
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 23


 959:Generated_Source\PSoC5/UART_1.c ****             {
 960:Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 291              		.loc 1 960 0
 292 0028 272A     		cmp	r2, #39
 293 002a 02D9     		bls	.L27
 961:Generated_Source\PSoC5/UART_1.c ****                 {
 962:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 294              		.loc 1 962 0
 295 002c 0022     		movs	r2, #0
 296 002e 064B     		ldr	r3, .L28
 297 0030 9A70     		strb	r2, [r3, #2]
 298              	.L27:
 963:Generated_Source\PSoC5/UART_1.c ****                 }
 964:Generated_Source\PSoC5/UART_1.c **** 
 965:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 299              		.loc 1 965 0
 300 0032 054A     		ldr	r2, .L28
 301 0034 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 302 0036 0849     		ldr	r1, .L28+16
 303 0038 C854     		strb	r0, [r1, r3]
 966:Generated_Source\PSoC5/UART_1.c **** 
 967:Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 304              		.loc 1 968 0
 305 003a 0133     		adds	r3, r3, #1
 306 003c 9370     		strb	r3, [r2, #2]
 307              	.L26:
 969:Generated_Source\PSoC5/UART_1.c ****             }
 970:Generated_Source\PSoC5/UART_1.c **** 
 971:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 308              		.loc 1 971 0
 309 003e 0222     		movs	r2, #2
 310 0040 064B     		ldr	r3, .L28+20
 311 0042 1A60     		str	r2, [r3]
 312              	.L23:
 313 0044 7047     		bx	lr
 314              	.L29:
 315 0046 00BF     		.align	2
 316              	.L28:
 317 0048 00000000 		.word	.LANCHOR0
 318 004c 80E100E0 		.word	-536813184
 319 0050 65650040 		.word	1073767781
 320 0054 45650040 		.word	1073767749
 321 0058 00000000 		.word	UART_1_txBuffer
 322 005c 00E100E0 		.word	-536813312
 323              		.cfi_endproc
 324              	.LFE7:
 325              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 326              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 327              		.align	2
 328              		.global	UART_1_ReadTxStatus
 329              		.thumb
 330              		.thumb_func
 331              		.type	UART_1_ReadTxStatus, %function
 332              	UART_1_ReadTxStatus:
 333              	.LFB8:
 972:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 24


 973:Generated_Source\PSoC5/UART_1.c ****         #else
 974:Generated_Source\PSoC5/UART_1.c **** 
 975:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART_1.c **** 
 978:Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_1.c ****         }
 980:Generated_Source\PSoC5/UART_1.c ****     }
 981:Generated_Source\PSoC5/UART_1.c **** 
 982:Generated_Source\PSoC5/UART_1.c **** 
 983:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_1.c ****     *
 987:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_1.c ****     *
 990:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:Generated_Source\PSoC5/UART_1.c ****     *
 993:Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_1.c ****     *
 996:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_1.c ****     *
1002:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_1.c ****     {
 334              		.loc 1 1004 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 339              		.loc 1 1005 0
 340 0000 014B     		ldr	r3, .L31
 341 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART_1.c ****     }
 342              		.loc 1 1006 0
 343 0004 7047     		bx	lr
 344              	.L32:
 345 0006 00BF     		.align	2
 346              	.L31:
 347 0008 65650040 		.word	1073767781
 348              		.cfi_endproc
 349              	.LFE8:
 350              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 351              		.section	.text.UART_1_PutChar,"ax",%progbits
 352              		.align	2
 353              		.global	UART_1_PutChar
 354              		.thumb
 355              		.thumb_func
 356              		.type	UART_1_PutChar, %function
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 25


 357              	UART_1_PutChar:
 358              	.LFB9:
1007:Generated_Source\PSoC5/UART_1.c **** 
1008:Generated_Source\PSoC5/UART_1.c **** 
1009:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_1.c ****     *
1013:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_1.c ****     *
1018:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_1.c ****     *
1021:Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:Generated_Source\PSoC5/UART_1.c ****     *
1024:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_1.c ****     *
1034:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:Generated_Source\PSoC5/UART_1.c ****     *
1037:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_1.c ****     *
1040:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_1.c ****     {
 359              		.loc 1 1042 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364              	.LVL11:
 365              	.L36:
1043:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_1.c ****         */
1048:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_1.c **** 
1051:Generated_Source\PSoC5/UART_1.c ****         do
1052:Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_1.c **** 
1054:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 26


1055:Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_1.c **** 
1059:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
 366              		.loc 1 1059 0
 367 0000 164B     		ldr	r3, .L41
 368 0002 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 369              	.LVL12:
1060:Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
 370              		.loc 1 1060 0
 371 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 372 0006 DBB2     		uxtb	r3, r3
 373              	.LVL13:
1061:Generated_Source\PSoC5/UART_1.c **** 
1062:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_1.c ****         }
1067:Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 374              		.loc 1 1067 0
 375 0008 9942     		cmp	r1, r3
 376 000a 05D2     		bcs	.L34
 377              		.loc 1 1067 0 is_stmt 0 discriminator 1
 378 000c 5A1E     		subs	r2, r3, #1
 379 000e 9142     		cmp	r1, r2
 380 0010 14BF     		ite	ne
 381 0012 0022     		movne	r2, #0
 382 0014 0122     		moveq	r2, #1
 383 0016 04E0     		b	.L35
 384              	.L34:
1068:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 385              		.loc 1 1068 0 is_stmt 1 discriminator 2
 386 0018 CA1A     		subs	r2, r1, r3
1067:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 387              		.loc 1 1067 0 discriminator 2
 388 001a 272A     		cmp	r2, #39
 389 001c 14BF     		ite	ne
 390 001e 0022     		movne	r2, #0
 391 0020 0122     		moveq	r2, #1
 392              	.L35:
1069:Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
 393              		.loc 1 1069 0
 394 0022 002A     		cmp	r2, #0
 395 0024 ECD1     		bne	.L36
1070:Generated_Source\PSoC5/UART_1.c **** 
1071:Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 396              		.loc 1 1071 0
 397 0026 9942     		cmp	r1, r3
 398 0028 07D1     		bne	.L37
1072:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 399              		.loc 1 1072 0 discriminator 1
 400 002a 0D4B     		ldr	r3, .L41+4
 401              	.LVL14:
 402 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 27


 403              		.loc 1 1071 0 discriminator 1
 404 002e 13F0040F 		tst	r3, #4
 405 0032 02D1     		bne	.L37
1073:Generated_Source\PSoC5/UART_1.c ****         {
1074:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 406              		.loc 1 1075 0
 407 0034 0B4B     		ldr	r3, .L41+8
 408 0036 1870     		strb	r0, [r3]
 409 0038 7047     		bx	lr
 410              	.L37:
1076:Generated_Source\PSoC5/UART_1.c ****         }
1077:Generated_Source\PSoC5/UART_1.c ****         else
1078:Generated_Source\PSoC5/UART_1.c ****         {
1079:Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
 411              		.loc 1 1079 0
 412 003a 2729     		cmp	r1, #39
 413 003c 00D9     		bls	.L39
1080:Generated_Source\PSoC5/UART_1.c ****             {
1081:Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
 414              		.loc 1 1081 0
 415 003e 0021     		movs	r1, #0
 416              	.LVL15:
 417              	.L39:
1082:Generated_Source\PSoC5/UART_1.c ****             }
1083:Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
 418              		.loc 1 1084 0
 419 0040 094B     		ldr	r3, .L41+12
 420 0042 5854     		strb	r0, [r3, r1]
1085:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
 421              		.loc 1 1085 0
 422 0044 0131     		adds	r1, r1, #1
 423              	.LVL16:
1086:Generated_Source\PSoC5/UART_1.c **** 
1087:Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_1.c **** 
1092:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
 424              		.loc 1 1092 0
 425 0046 054B     		ldr	r3, .L41
 426 0048 9970     		strb	r1, [r3, #2]
1093:Generated_Source\PSoC5/UART_1.c **** 
1094:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_1.c **** 
1098:Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
 427              		.loc 1 1098 0
 428 004a 054B     		ldr	r3, .L41+4
 429 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 430 004e 13F0020F 		tst	r3, #2
 431 0052 02D0     		beq	.L33
1099:Generated_Source\PSoC5/UART_1.c ****             {
1100:Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 28


1101:Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
 432              		.loc 1 1101 0
 433 0054 0222     		movs	r2, #2
 434 0056 054B     		ldr	r3, .L41+16
 435 0058 1A60     		str	r2, [r3]
 436              	.L33:
 437 005a 7047     		bx	lr
 438              	.L42:
 439              		.align	2
 440              	.L41:
 441 005c 00000000 		.word	.LANCHOR0
 442 0060 65650040 		.word	1073767781
 443 0064 45650040 		.word	1073767749
 444 0068 00000000 		.word	UART_1_txBuffer
 445 006c 00E200E0 		.word	-536813056
 446              		.cfi_endproc
 447              	.LFE9:
 448              		.size	UART_1_PutChar, .-UART_1_PutChar
 449              		.section	.text.UART_1_PutString,"ax",%progbits
 450              		.align	2
 451              		.global	UART_1_PutString
 452              		.thumb
 453              		.thumb_func
 454              		.type	UART_1_PutString, %function
 455              	UART_1_PutString:
 456              	.LFB10:
1102:Generated_Source\PSoC5/UART_1.c ****             }
1103:Generated_Source\PSoC5/UART_1.c ****         }
1104:Generated_Source\PSoC5/UART_1.c **** 
1105:Generated_Source\PSoC5/UART_1.c ****     #else
1106:Generated_Source\PSoC5/UART_1.c **** 
1107:Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART_1.c ****         {
1109:Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_1.c ****         }
1111:Generated_Source\PSoC5/UART_1.c **** 
1112:Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART_1.c **** 
1115:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_1.c ****     }
1117:Generated_Source\PSoC5/UART_1.c **** 
1118:Generated_Source\PSoC5/UART_1.c **** 
1119:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_1.c ****     *
1123:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_1.c ****     *
1126:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_1.c ****     *
1129:Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:Generated_Source\PSoC5/UART_1.c ****     *
1132:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 29


1133:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_1.c ****     *
1136:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:Generated_Source\PSoC5/UART_1.c ****     *
1139:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_1.c ****     *
1144:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_1.c ****     {
 457              		.loc 1 1146 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              	.LVL17:
 462 0000 38B5     		push	{r3, r4, r5, lr}
 463              		.cfi_def_cfa_offset 16
 464              		.cfi_offset 3, -16
 465              		.cfi_offset 4, -12
 466              		.cfi_offset 5, -8
 467              		.cfi_offset 14, -4
 468              	.LVL18:
1147:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART_1.c **** 
1149:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 469              		.loc 1 1150 0
 470 0002 074B     		ldr	r3, .L49
 471 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 472 0006 2BB9     		cbnz	r3, .L47
 473 0008 38BD     		pop	{r3, r4, r5, pc}
 474              	.LVL19:
 475              	.L46:
1151:Generated_Source\PSoC5/UART_1.c ****         {
1152:Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART_1.c ****             {
1155:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 476              		.loc 1 1155 0
 477 000a FFF7FEFF 		bl	UART_1_PutChar
 478              	.LVL20:
1156:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 479              		.loc 1 1156 0
 480 000e 0134     		adds	r4, r4, #1
 481              	.LVL21:
 482 0010 A4B2     		uxth	r4, r4
 483              	.LVL22:
 484 0012 01E0     		b	.L44
 485              	.LVL23:
 486              	.L47:
 487 0014 0546     		mov	r5, r0
 488 0016 0024     		movs	r4, #0
 489              	.LVL24:
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 30


 490              	.L44:
1153:Generated_Source\PSoC5/UART_1.c ****             {
 491              		.loc 1 1153 0
 492 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 493 001a 0028     		cmp	r0, #0
 494 001c F5D1     		bne	.L46
 495 001e 38BD     		pop	{r3, r4, r5, pc}
 496              	.LVL25:
 497              	.L50:
 498              		.align	2
 499              	.L49:
 500 0020 00000000 		.word	.LANCHOR0
 501              		.cfi_endproc
 502              	.LFE10:
 503              		.size	UART_1_PutString, .-UART_1_PutString
 504              		.section	.text.UART_1_PutArray,"ax",%progbits
 505              		.align	2
 506              		.global	UART_1_PutArray
 507              		.thumb
 508              		.thumb_func
 509              		.type	UART_1_PutArray, %function
 510              	UART_1_PutArray:
 511              	.LFB11:
1157:Generated_Source\PSoC5/UART_1.c ****             }
1158:Generated_Source\PSoC5/UART_1.c ****         }
1159:Generated_Source\PSoC5/UART_1.c ****     }
1160:Generated_Source\PSoC5/UART_1.c **** 
1161:Generated_Source\PSoC5/UART_1.c **** 
1162:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_1.c ****     *
1166:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_1.c ****     *
1170:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_1.c ****     *
1175:Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:Generated_Source\PSoC5/UART_1.c ****     *
1178:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_1.c ****     *
1182:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:Generated_Source\PSoC5/UART_1.c ****     *
1185:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_1.c ****     *
1190:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 31


1191:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:Generated_Source\PSoC5/UART_1.c ****     {
 512              		.loc 1 1193 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              	.LVL26:
1194:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART_1.c **** 
1196:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 517              		.loc 1 1197 0
 518 0000 084B     		ldr	r3, .L57
 519 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 520 0004 33B9     		cbnz	r3, .L55
 521 0006 7047     		bx	lr
 522              	.LVL27:
 523              	.L54:
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 4, -16
 526              		.cfi_offset 5, -12
 527              		.cfi_offset 6, -8
 528              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART_1.c ****         {
1199:Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART_1.c ****             {
1201:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 529              		.loc 1 1201 0
 530 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 531 000a FFF7FEFF 		bl	UART_1_PutChar
 532              	.LVL28:
1202:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 533              		.loc 1 1202 0
 534 000e 0134     		adds	r4, r4, #1
 535              	.LVL29:
 536 0010 E4B2     		uxtb	r4, r4
 537              	.LVL30:
 538 0012 03E0     		b	.L52
 539              	.LVL31:
 540              	.L55:
 541              		.cfi_def_cfa_offset 0
 542              		.cfi_restore 4
 543              		.cfi_restore 5
 544              		.cfi_restore 6
 545              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
 546              		.loc 1 1193 0
 547 0014 70B5     		push	{r4, r5, r6, lr}
 548              		.cfi_def_cfa_offset 16
 549              		.cfi_offset 4, -16
 550              		.cfi_offset 5, -12
 551              		.cfi_offset 6, -8
 552              		.cfi_offset 14, -4
 553 0016 0D46     		mov	r5, r1
 554 0018 0646     		mov	r6, r0
 555 001a 0024     		movs	r4, #0
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 32


 556              	.LVL32:
 557              	.L52:
1199:Generated_Source\PSoC5/UART_1.c ****             {
 558              		.loc 1 1199 0
 559 001c AC42     		cmp	r4, r5
 560 001e F3D3     		bcc	.L54
 561 0020 70BD     		pop	{r4, r5, r6, pc}
 562              	.LVL33:
 563              	.L58:
 564 0022 00BF     		.align	2
 565              	.L57:
 566 0024 00000000 		.word	.LANCHOR0
 567              		.cfi_endproc
 568              	.LFE11:
 569              		.size	UART_1_PutArray, .-UART_1_PutArray
 570              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 571              		.align	2
 572              		.global	UART_1_PutCRLF
 573              		.thumb
 574              		.thumb_func
 575              		.type	UART_1_PutCRLF, %function
 576              	UART_1_PutCRLF:
 577              	.LFB12:
1203:Generated_Source\PSoC5/UART_1.c ****             }
1204:Generated_Source\PSoC5/UART_1.c ****         }
1205:Generated_Source\PSoC5/UART_1.c ****     }
1206:Generated_Source\PSoC5/UART_1.c **** 
1207:Generated_Source\PSoC5/UART_1.c **** 
1208:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_1.c ****     *
1212:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_1.c ****     *
1216:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_1.c ****     *
1219:Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:Generated_Source\PSoC5/UART_1.c ****     *
1222:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_1.c ****     *
1226:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:Generated_Source\PSoC5/UART_1.c ****     *
1229:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_1.c ****     {
 578              		.loc 1 1231 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              	.LVL34:
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 33


 583 0000 08B5     		push	{r3, lr}
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 3, -8
 586              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 587              		.loc 1 1233 0
 588 0002 064B     		ldr	r3, .L62
 589 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 590 0006 3BB1     		cbz	r3, .L59
1234:Generated_Source\PSoC5/UART_1.c ****         {
1235:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 591              		.loc 1 1235 0
 592 0008 FFF7FEFF 		bl	UART_1_PutChar
 593              	.LVL35:
1236:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 594              		.loc 1 1236 0
 595 000c 0D20     		movs	r0, #13
 596 000e FFF7FEFF 		bl	UART_1_PutChar
 597              	.LVL36:
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 598              		.loc 1 1237 0
 599 0012 0A20     		movs	r0, #10
 600 0014 FFF7FEFF 		bl	UART_1_PutChar
 601              	.LVL37:
 602              	.L59:
 603 0018 08BD     		pop	{r3, pc}
 604              	.L63:
 605 001a 00BF     		.align	2
 606              	.L62:
 607 001c 00000000 		.word	.LANCHOR0
 608              		.cfi_endproc
 609              	.LFE12:
 610              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 611              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 612              		.align	2
 613              		.global	UART_1_GetTxBufferSize
 614              		.thumb
 615              		.thumb_func
 616              		.type	UART_1_GetTxBufferSize, %function
 617              	UART_1_GetTxBufferSize:
 618              	.LFB13:
1238:Generated_Source\PSoC5/UART_1.c ****         }
1239:Generated_Source\PSoC5/UART_1.c ****     }
1240:Generated_Source\PSoC5/UART_1.c **** 
1241:Generated_Source\PSoC5/UART_1.c **** 
1242:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_1.c ****     *
1246:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 34


1253:Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_1.c ****     *
1255:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:Generated_Source\PSoC5/UART_1.c ****     *
1258:Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_1.c ****     *
1262:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_1.c ****     *
1266:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:Generated_Source\PSoC5/UART_1.c ****     *
1269:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_1.c ****     *
1272:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_1.c ****                                                             
1275:Generated_Source\PSoC5/UART_1.c ****     {
 619              		.loc 1 1275 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_1.c **** 
1278:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_1.c **** 
1280:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
 624              		.loc 1 1281 0
 625 0000 0222     		movs	r2, #2
 626 0002 0E4B     		ldr	r3, .L68
 627 0004 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART_1.c **** 
1283:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
 628              		.loc 1 1283 0
 629 0006 0E4B     		ldr	r3, .L68+4
 630 0008 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 631 000a D2B2     		uxtb	r2, r2
 632 000c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 633 000e 9A42     		cmp	r2, r3
 634 0010 0FD0     		beq	.L67
1284:Generated_Source\PSoC5/UART_1.c ****         {
1285:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_1.c ****         }
1287:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
 635              		.loc 1 1287 0
 636 0012 0B4A     		ldr	r2, .L68+4
 637 0014 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 638 0016 D2B2     		uxtb	r2, r2
 639 0018 9342     		cmp	r3, r2
 640 001a 04D9     		bls	.L66
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 35


1288:Generated_Source\PSoC5/UART_1.c ****         {
1289:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
 641              		.loc 1 1289 0
 642 001c 084A     		ldr	r2, .L68+4
 643 001e 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 644 0020 181A     		subs	r0, r3, r0
 645 0022 C0B2     		uxtb	r0, r0
 646              	.LVL38:
 647 0024 06E0     		b	.L65
 648              	.LVL39:
 649              	.L66:
1290:Generated_Source\PSoC5/UART_1.c ****         }
1291:Generated_Source\PSoC5/UART_1.c ****         else
1292:Generated_Source\PSoC5/UART_1.c ****         {
1293:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
 650              		.loc 1 1293 0
 651 0026 064A     		ldr	r2, .L68+4
 652 0028 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 653 002a 181A     		subs	r0, r3, r0
 654 002c 2830     		adds	r0, r0, #40
 655 002e C0B2     		uxtb	r0, r0
 656              	.LVL40:
 657 0030 00E0     		b	.L65
 658              	.LVL41:
 659              	.L67:
1285:Generated_Source\PSoC5/UART_1.c ****         }
 660              		.loc 1 1285 0
 661 0032 0020     		movs	r0, #0
 662              	.L65:
 663              	.LVL42:
1294:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC5/UART_1.c ****         }
1296:Generated_Source\PSoC5/UART_1.c **** 
1297:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
 664              		.loc 1 1297 0
 665 0034 0222     		movs	r2, #2
 666 0036 034B     		ldr	r3, .L68+8
 667 0038 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART_1.c **** 
1299:Generated_Source\PSoC5/UART_1.c ****     #else
1300:Generated_Source\PSoC5/UART_1.c **** 
1301:Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART_1.c **** 
1303:Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART_1.c ****         {
1306:Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_1.c ****         }
1308:Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART_1.c ****         {
1310:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART_1.c ****         }
1312:Generated_Source\PSoC5/UART_1.c ****         else
1313:Generated_Source\PSoC5/UART_1.c ****         {
1314:Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_1.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART_1.c ****         }
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 36


1317:Generated_Source\PSoC5/UART_1.c **** 
1318:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_1.c **** 
1320:Generated_Source\PSoC5/UART_1.c ****     return(size);
1321:Generated_Source\PSoC5/UART_1.c ****     }
 668              		.loc 1 1321 0
 669 003a 7047     		bx	lr
 670              	.L69:
 671              		.align	2
 672              	.L68:
 673 003c 80E100E0 		.word	-536813184
 674 0040 00000000 		.word	.LANCHOR0
 675 0044 00E100E0 		.word	-536813312
 676              		.cfi_endproc
 677              	.LFE13:
 678              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 679              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 680              		.align	2
 681              		.global	UART_1_ClearTxBuffer
 682              		.thumb
 683              		.thumb_func
 684              		.type	UART_1_ClearTxBuffer, %function
 685              	UART_1_ClearTxBuffer:
 686              	.LFB14:
1322:Generated_Source\PSoC5/UART_1.c **** 
1323:Generated_Source\PSoC5/UART_1.c **** 
1324:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_1.c ****     *
1328:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_1.c ****     *
1331:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:Generated_Source\PSoC5/UART_1.c ****     *
1334:Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:Generated_Source\PSoC5/UART_1.c ****     *
1337:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_1.c ****     *
1341:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:Generated_Source\PSoC5/UART_1.c ****     *
1344:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_1.c ****     *
1349:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_1.c ****     *
1353:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 37


1355:Generated_Source\PSoC5/UART_1.c ****     {
 687              		.loc 1 1355 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691 0000 08B5     		push	{r3, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 3, -8
 694              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_1.c **** 
1358:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 695              		.loc 1 1358 0
 696 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 697              	.LVL43:
1359:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 698              		.loc 1 1360 0
 699 0006 0A4B     		ldr	r3, .L72
 700 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 701 000a 42F00102 		orr	r2, r2, #1
 702 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 703              		.loc 1 1361 0
 704 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 705 0012 02F0FE02 		and	r2, r2, #254
 706 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 707              		.loc 1 1362 0
 708 0018 FFF7FEFF 		bl	CyExitCriticalSection
 709              	.LVL44:
1363:Generated_Source\PSoC5/UART_1.c **** 
1364:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_1.c **** 
1366:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
 710              		.loc 1 1367 0
 711 001c 0223     		movs	r3, #2
 712 001e 054A     		ldr	r2, .L72+4
 713 0020 1360     		str	r3, [r2]
1368:Generated_Source\PSoC5/UART_1.c **** 
1369:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
 714              		.loc 1 1369 0
 715 0022 054A     		ldr	r2, .L72+8
 716 0024 0021     		movs	r1, #0
 717 0026 5170     		strb	r1, [r2, #1]
1370:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
 718              		.loc 1 1370 0
 719 0028 9170     		strb	r1, [r2, #2]
1371:Generated_Source\PSoC5/UART_1.c **** 
1372:Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
 720              		.loc 1 1373 0
 721 002a 044A     		ldr	r2, .L72+12
 722 002c 1360     		str	r3, [r2]
 723 002e 08BD     		pop	{r3, pc}
 724              	.L73:
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 38


 725              		.align	2
 726              	.L72:
 727 0030 95650040 		.word	1073767829
 728 0034 80E100E0 		.word	-536813184
 729 0038 00000000 		.word	.LANCHOR0
 730 003c 00E100E0 		.word	-536813312
 731              		.cfi_endproc
 732              	.LFE14:
 733              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 734              		.section	.text.UART_1_SendBreak,"ax",%progbits
 735              		.align	2
 736              		.global	UART_1_SendBreak
 737              		.thumb
 738              		.thumb_func
 739              		.type	UART_1_SendBreak, %function
 740              	UART_1_SendBreak:
 741              	.LFB15:
1374:Generated_Source\PSoC5/UART_1.c **** 
1375:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_1.c ****     }
1377:Generated_Source\PSoC5/UART_1.c **** 
1378:Generated_Source\PSoC5/UART_1.c **** 
1379:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_1.c ****     *
1383:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_1.c ****     *
1386:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_1.c ****     *
1398:Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:Generated_Source\PSoC5/UART_1.c ****     *
1401:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_1.c ****     *
1406:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:Generated_Source\PSoC5/UART_1.c ****     *
1409:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 39


1414:Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_1.c ****     *
1432:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_1.c ****     *
1439:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_1.c ****     {
 742              		.loc 1 1441 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747              	.LVL45:
1442:Generated_Source\PSoC5/UART_1.c **** 
1443:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 748              		.loc 1 1444 0
 749 0000 124B     		ldr	r3, .L81
 750 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 751 0004 0BB3     		cbz	r3, .L74
 752              	.LBB2:
1445:Generated_Source\PSoC5/UART_1.c ****         {
1446:Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_1.c **** 
1450:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_1.c **** 
1452:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_1.c ****             {
1455:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 40


1460:Generated_Source\PSoC5/UART_1.c **** 
1461:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_1.c ****                 {
1463:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_1.c ****                 }
1465:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_1.c ****             }
1467:Generated_Source\PSoC5/UART_1.c **** 
1468:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_1.c ****             {
1471:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_1.c ****                 {
1473:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_1.c ****                 }
1475:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_1.c ****             }
1477:Generated_Source\PSoC5/UART_1.c **** 
1478:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_1.c ****             {
1482:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_1.c ****             }
1485:Generated_Source\PSoC5/UART_1.c **** 
1486:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_1.c **** 
1488:Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_1.c **** 
1490:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 753              		.loc 1 1490 0
 754 0006 08B1     		cbz	r0, .L76
 755              		.loc 1 1490 0 is_stmt 0 discriminator 1
 756 0008 0328     		cmp	r0, #3
 757 000a 0DD1     		bne	.L77
 758              	.L76:
1491:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_1.c ****             {
1493:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_1.c **** 
1500:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 759              		.loc 1 1501 0 is_stmt 1
 760 000c 104B     		ldr	r3, .L81+4
 761 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 762 0010 0E4A     		ldr	r2, .L81
 763 0012 D170     		strb	r1, [r2, #3]
1502:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 764              		.loc 1 1502 0
 765 0014 6722     		movs	r2, #103
 766 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 41


1503:Generated_Source\PSoC5/UART_1.c ****                 #else
1504:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_1.c **** 
1508:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 767              		.loc 1 1509 0
 768 0018 0022     		movs	r2, #0
 769 001a 1133     		adds	r3, r3, #17
 770 001c 1A70     		strb	r2, [r3]
 771              	.L78:
1510:Generated_Source\PSoC5/UART_1.c **** 
1511:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_1.c ****                 {
1513:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 772              		.loc 1 1513 0 discriminator 1
 773 001e 0D4B     		ldr	r3, .L81+8
 774 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 775              	.LVL46:
1514:Generated_Source\PSoC5/UART_1.c ****                 }
1515:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 776              		.loc 1 1515 0 discriminator 1
 777 0022 13F0020F 		tst	r3, #2
 778 0026 FAD1     		bne	.L78
 779              	.LVL47:
 780              	.L77:
1516:Generated_Source\PSoC5/UART_1.c ****             }
1517:Generated_Source\PSoC5/UART_1.c **** 
1518:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 781              		.loc 1 1518 0
 782 0028 0128     		cmp	r0, #1
 783 002a 01D0     		beq	.L79
 784              		.loc 1 1518 0 is_stmt 0 discriminator 1
 785 002c 0328     		cmp	r0, #3
 786 002e 04D1     		bne	.L80
 787              	.L79:
1519:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_1.c ****             {
1521:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_1.c ****                 {
1523:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 788              		.loc 1 1523 0 is_stmt 1 discriminator 1
 789 0030 084B     		ldr	r3, .L81+8
 790 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 791              	.LVL48:
1524:Generated_Source\PSoC5/UART_1.c ****                 }
1525:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 792              		.loc 1 1525 0 discriminator 1
 793 0034 13F0010F 		tst	r3, #1
 794 0038 FAD0     		beq	.L79
 795              	.LVL49:
 796              	.L80:
1526:Generated_Source\PSoC5/UART_1.c ****             }
1527:Generated_Source\PSoC5/UART_1.c **** 
1528:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 42


 797              		.loc 1 1529 0
 798 003a 0138     		subs	r0, r0, #1
 799              	.LVL50:
 800 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 801              		.loc 1 1528 0
 802 003e 0228     		cmp	r0, #2
 803 0040 03D8     		bhi	.L74
1530:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_1.c ****             {
1532:Generated_Source\PSoC5/UART_1.c **** 
1533:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 804              		.loc 1 1534 0
 805 0042 024B     		ldr	r3, .L81
 806 0044 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 807 0046 024B     		ldr	r3, .L81+4
 808 0048 1A70     		strb	r2, [r3]
 809              	.L74:
 810 004a 7047     		bx	lr
 811              	.L82:
 812              		.align	2
 813              	.L81:
 814 004c 00000000 		.word	.LANCHOR0
 815 0050 34650040 		.word	1073767732
 816 0054 65650040 		.word	1073767781
 817              	.LBE2:
 818              		.cfi_endproc
 819              	.LFE15:
 820              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 821              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 822              		.align	2
 823              		.global	UART_1_SetTxAddressMode
 824              		.thumb
 825              		.thumb_func
 826              		.type	UART_1_SetTxAddressMode, %function
 827              	UART_1_SetTxAddressMode:
 828              	.LFB16:
1535:Generated_Source\PSoC5/UART_1.c ****             #else
1536:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_1.c **** 
1539:Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_1.c ****             }
1545:Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_1.c ****         }
1547:Generated_Source\PSoC5/UART_1.c ****     }
1548:Generated_Source\PSoC5/UART_1.c **** 
1549:Generated_Source\PSoC5/UART_1.c **** 
1550:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 43


1554:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_1.c ****     *
1557:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_1.c ****     *
1564:Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:Generated_Source\PSoC5/UART_1.c ****     *
1567:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:Generated_Source\PSoC5/UART_1.c ****     *
1571:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_1.c ****     {
 829              		.loc 1 1573 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834              	.LVL51:
 835 0000 7047     		bx	lr
 836              		.cfi_endproc
 837              	.LFE16:
 838              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 839              		.global	UART_1_txBufferWrite
 840              		.global	UART_1_txBufferRead
 841              		.comm	UART_1_txBuffer,40,4
 842              		.global	UART_1_initVar
 843 0002 00BF     		.bss
 844              		.set	.LANCHOR0,. + 0
 845              		.type	UART_1_initVar, %object
 846              		.size	UART_1_initVar, 1
 847              	UART_1_initVar:
 848 0000 00       		.space	1
 849              		.type	UART_1_txBufferRead, %object
 850              		.size	UART_1_txBufferRead, 1
 851              	UART_1_txBufferRead:
 852 0001 00       		.space	1
 853              		.type	UART_1_txBufferWrite, %object
 854              		.size	UART_1_txBufferWrite, 1
 855              	UART_1_txBufferWrite:
 856 0002 00       		.space	1
 857              		.type	txPeriod.5041, %object
 858              		.size	txPeriod.5041, 1
 859              	txPeriod.5041:
 860 0003 00       		.space	1
 861              		.text
 862              	.Letext0:
 863              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 864              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 865              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 44


 866              	.Ldebug_info0:
 867 0000 E7040000 		.4byte	0x4e7
 868 0004 0400     		.2byte	0x4
 869 0006 00000000 		.4byte	.Ldebug_abbrev0
 870 000a 04       		.byte	0x4
 871 000b 01       		.uleb128 0x1
 872 000c 15010000 		.4byte	.LASF58
 873 0010 0C       		.byte	0xc
 874 0011 64020000 		.4byte	.LASF59
 875 0015 E2030000 		.4byte	.LASF60
 876 0019 00000000 		.4byte	.Ldebug_ranges0+0
 877 001d 00000000 		.4byte	0
 878 0021 00000000 		.4byte	.Ldebug_line0
 879 0025 02       		.uleb128 0x2
 880 0026 01       		.byte	0x1
 881 0027 06       		.byte	0x6
 882 0028 B0030000 		.4byte	.LASF0
 883 002c 02       		.uleb128 0x2
 884 002d 01       		.byte	0x1
 885 002e 08       		.byte	0x8
 886 002f 0A020000 		.4byte	.LASF1
 887 0033 02       		.uleb128 0x2
 888 0034 02       		.byte	0x2
 889 0035 05       		.byte	0x5
 890 0036 26020000 		.4byte	.LASF2
 891 003a 02       		.uleb128 0x2
 892 003b 02       		.byte	0x2
 893 003c 07       		.byte	0x7
 894 003d 94000000 		.4byte	.LASF3
 895 0041 02       		.uleb128 0x2
 896 0042 04       		.byte	0x4
 897 0043 05       		.byte	0x5
 898 0044 70030000 		.4byte	.LASF4
 899 0048 02       		.uleb128 0x2
 900 0049 04       		.byte	0x4
 901 004a 07       		.byte	0x7
 902 004b CF010000 		.4byte	.LASF5
 903 004f 02       		.uleb128 0x2
 904 0050 08       		.byte	0x8
 905 0051 05       		.byte	0x5
 906 0052 00000000 		.4byte	.LASF6
 907 0056 02       		.uleb128 0x2
 908 0057 08       		.byte	0x8
 909 0058 07       		.byte	0x7
 910 0059 F2000000 		.4byte	.LASF7
 911 005d 03       		.uleb128 0x3
 912 005e 04       		.byte	0x4
 913 005f 05       		.byte	0x5
 914 0060 696E7400 		.ascii	"int\000"
 915 0064 02       		.uleb128 0x2
 916 0065 04       		.byte	0x4
 917 0066 07       		.byte	0x7
 918 0067 AC000000 		.4byte	.LASF8
 919 006b 04       		.uleb128 0x4
 920 006c E1010000 		.4byte	.LASF9
 921 0070 02       		.byte	0x2
 922 0071 9201     		.2byte	0x192
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 45


 923 0073 2C000000 		.4byte	0x2c
 924 0077 04       		.uleb128 0x4
 925 0078 30020000 		.4byte	.LASF10
 926 007c 02       		.byte	0x2
 927 007d 9301     		.2byte	0x193
 928 007f 3A000000 		.4byte	0x3a
 929 0083 04       		.uleb128 0x4
 930 0084 37020000 		.4byte	.LASF11
 931 0088 02       		.byte	0x2
 932 0089 9401     		.2byte	0x194
 933 008b 48000000 		.4byte	0x48
 934 008f 02       		.uleb128 0x2
 935 0090 04       		.byte	0x4
 936 0091 04       		.byte	0x4
 937 0092 EC000000 		.4byte	.LASF12
 938 0096 02       		.uleb128 0x2
 939 0097 08       		.byte	0x8
 940 0098 04       		.byte	0x4
 941 0099 18020000 		.4byte	.LASF13
 942 009d 04       		.uleb128 0x4
 943 009e 04030000 		.4byte	.LASF14
 944 00a2 02       		.byte	0x2
 945 00a3 A301     		.2byte	0x1a3
 946 00a5 A9000000 		.4byte	0xa9
 947 00a9 02       		.uleb128 0x2
 948 00aa 01       		.byte	0x1
 949 00ab 08       		.byte	0x8
 950 00ac A7000000 		.4byte	.LASF15
 951 00b0 04       		.uleb128 0x4
 952 00b1 A3010000 		.4byte	.LASF16
 953 00b5 02       		.byte	0x2
 954 00b6 3C02     		.2byte	0x23c
 955 00b8 BC000000 		.4byte	0xbc
 956 00bc 05       		.uleb128 0x5
 957 00bd 6B000000 		.4byte	0x6b
 958 00c1 04       		.uleb128 0x4
 959 00c2 15030000 		.4byte	.LASF17
 960 00c6 02       		.byte	0x2
 961 00c7 3E02     		.2byte	0x23e
 962 00c9 CD000000 		.4byte	0xcd
 963 00cd 05       		.uleb128 0x5
 964 00ce 83000000 		.4byte	0x83
 965 00d2 02       		.uleb128 0x2
 966 00d3 08       		.byte	0x8
 967 00d4 04       		.byte	0x4
 968 00d5 90030000 		.4byte	.LASF18
 969 00d9 02       		.uleb128 0x2
 970 00da 04       		.byte	0x4
 971 00db 07       		.byte	0x7
 972 00dc FB020000 		.4byte	.LASF19
 973 00e0 06       		.uleb128 0x6
 974 00e1 0E000000 		.4byte	.LASF20
 975 00e5 01       		.byte	0x1
 976 00e6 6A       		.byte	0x6a
 977 00e7 00000000 		.4byte	.LFB1
 978 00eb 30000000 		.4byte	.LFE1-.LFB1
 979 00ef 01       		.uleb128 0x1
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 46


 980 00f0 9C       		.byte	0x9c
 981 00f1 1D010000 		.4byte	0x11d
 982 00f5 07       		.uleb128 0x7
 983 00f6 0A000000 		.4byte	.LVL0
 984 00fa BE040000 		.4byte	0x4be
 985 00fe 08010000 		.4byte	0x108
 986 0102 08       		.uleb128 0x8
 987 0103 01       		.uleb128 0x1
 988 0104 50       		.byte	0x50
 989 0105 01       		.uleb128 0x1
 990 0106 31       		.byte	0x31
 991 0107 00       		.byte	0
 992 0108 09       		.uleb128 0x9
 993 0109 12000000 		.4byte	.LVL1
 994 010d C9040000 		.4byte	0x4c9
 995 0111 08       		.uleb128 0x8
 996 0112 01       		.uleb128 0x1
 997 0113 50       		.byte	0x50
 998 0114 01       		.uleb128 0x1
 999 0115 31       		.byte	0x31
 1000 0116 08       		.uleb128 0x8
 1001 0117 01       		.uleb128 0x1
 1002 0118 51       		.byte	0x51
 1003 0119 01       		.uleb128 0x1
 1004 011a 37       		.byte	0x37
 1005 011b 00       		.byte	0
 1006 011c 00       		.byte	0
 1007 011d 06       		.uleb128 0x6
 1008 011e 82030000 		.4byte	.LASF21
 1009 0122 01       		.byte	0x1
 1010 0123 B7       		.byte	0xb7
 1011 0124 00000000 		.4byte	.LFB2
 1012 0128 2C000000 		.4byte	.LFE2-.LFB2
 1013 012c 01       		.uleb128 0x1
 1014 012d 9C       		.byte	0x9c
 1015 012e 54010000 		.4byte	0x154
 1016 0132 0A       		.uleb128 0xa
 1017 0133 F9010000 		.4byte	.LASF24
 1018 0137 01       		.byte	0x1
 1019 0138 B9       		.byte	0xb9
 1020 0139 6B000000 		.4byte	0x6b
 1021 013d 00000000 		.4byte	.LLST0
 1022 0141 0B       		.uleb128 0xb
 1023 0142 06000000 		.4byte	.LVL2
 1024 0146 D4040000 		.4byte	0x4d4
 1025 014a 0B       		.uleb128 0xb
 1026 014b 20000000 		.4byte	.LVL3
 1027 014f DF040000 		.4byte	0x4df
 1028 0153 00       		.byte	0
 1029 0154 06       		.uleb128 0x6
 1030 0155 1A000000 		.4byte	.LASF22
 1031 0159 01       		.byte	0x1
 1032 015a 4C       		.byte	0x4c
 1033 015b 00000000 		.4byte	.LFB0
 1034 015f 1C000000 		.4byte	.LFE0-.LFB0
 1035 0163 01       		.uleb128 0x1
 1036 0164 9C       		.byte	0x9c
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 47


 1037 0165 7C010000 		.4byte	0x17c
 1038 0169 0B       		.uleb128 0xb
 1039 016a 0C000000 		.4byte	.LVL4
 1040 016e E0000000 		.4byte	0xe0
 1041 0172 0B       		.uleb128 0xb
 1042 0173 16000000 		.4byte	.LVL5
 1043 0177 1D010000 		.4byte	0x11d
 1044 017b 00       		.byte	0
 1045 017c 06       		.uleb128 0x6
 1046 017d C3010000 		.4byte	.LASF23
 1047 0181 01       		.byte	0x1
 1048 0182 F0       		.byte	0xf0
 1049 0183 00000000 		.4byte	.LFB3
 1050 0187 24000000 		.4byte	.LFE3-.LFB3
 1051 018b 01       		.uleb128 0x1
 1052 018c 9C       		.byte	0x9c
 1053 018d B3010000 		.4byte	0x1b3
 1054 0191 0A       		.uleb128 0xa
 1055 0192 F9010000 		.4byte	.LASF24
 1056 0196 01       		.byte	0x1
 1057 0197 F2       		.byte	0xf2
 1058 0198 6B000000 		.4byte	0x6b
 1059 019c 13000000 		.4byte	.LLST1
 1060 01a0 0B       		.uleb128 0xb
 1061 01a1 06000000 		.4byte	.LVL6
 1062 01a5 D4040000 		.4byte	0x4d4
 1063 01a9 0B       		.uleb128 0xb
 1064 01aa 1A000000 		.4byte	.LVL7
 1065 01ae DF040000 		.4byte	0x4df
 1066 01b2 00       		.byte	0
 1067 01b3 0C       		.uleb128 0xc
 1068 01b4 A8010000 		.4byte	.LASF31
 1069 01b8 01       		.byte	0x1
 1070 01b9 2701     		.2byte	0x127
 1071 01bb 6B000000 		.4byte	0x6b
 1072 01bf 00000000 		.4byte	.LFB4
 1073 01c3 04000000 		.4byte	.LFE4-.LFB4
 1074 01c7 01       		.uleb128 0x1
 1075 01c8 9C       		.byte	0x9c
 1076 01c9 0D       		.uleb128 0xd
 1077 01ca 38000000 		.4byte	.LASF25
 1078 01ce 01       		.byte	0x1
 1079 01cf 3F01     		.2byte	0x13f
 1080 01d1 00000000 		.4byte	.LFB5
 1081 01d5 02000000 		.4byte	.LFE5-.LFB5
 1082 01d9 01       		.uleb128 0x1
 1083 01da 9C       		.byte	0x9c
 1084 01db EE010000 		.4byte	0x1ee
 1085 01df 0E       		.uleb128 0xe
 1086 01e0 E7010000 		.4byte	.LASF27
 1087 01e4 01       		.byte	0x1
 1088 01e5 3F01     		.2byte	0x13f
 1089 01e7 6B000000 		.4byte	0x6b
 1090 01eb 01       		.uleb128 0x1
 1091 01ec 50       		.byte	0x50
 1092 01ed 00       		.byte	0
 1093 01ee 0D       		.uleb128 0xd
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 48


 1094 01ef 7A000000 		.4byte	.LASF26
 1095 01f3 01       		.byte	0x1
 1096 01f4 8C03     		.2byte	0x38c
 1097 01f6 00000000 		.4byte	.LFB6
 1098 01fa 0C000000 		.4byte	.LFE6-.LFB6
 1099 01fe 01       		.uleb128 0x1
 1100 01ff 9C       		.byte	0x9c
 1101 0200 13020000 		.4byte	0x213
 1102 0204 0E       		.uleb128 0xe
 1103 0205 1F020000 		.4byte	.LASF28
 1104 0209 01       		.byte	0x1
 1105 020a 8C03     		.2byte	0x38c
 1106 020c 6B000000 		.4byte	0x6b
 1107 0210 01       		.uleb128 0x1
 1108 0211 50       		.byte	0x50
 1109 0212 00       		.byte	0
 1110 0213 0D       		.uleb128 0xd
 1111 0214 23030000 		.4byte	.LASF29
 1112 0218 01       		.byte	0x1
 1113 0219 AE03     		.2byte	0x3ae
 1114 021b 00000000 		.4byte	.LFB7
 1115 021f 60000000 		.4byte	.LFE7-.LFB7
 1116 0223 01       		.uleb128 0x1
 1117 0224 9C       		.byte	0x9c
 1118 0225 38020000 		.4byte	0x238
 1119 0229 0E       		.uleb128 0xe
 1120 022a 0A030000 		.4byte	.LASF30
 1121 022e 01       		.byte	0x1
 1122 022f AE03     		.2byte	0x3ae
 1123 0231 6B000000 		.4byte	0x6b
 1124 0235 01       		.uleb128 0x1
 1125 0236 50       		.byte	0x50
 1126 0237 00       		.byte	0
 1127 0238 0C       		.uleb128 0xc
 1128 0239 D1000000 		.4byte	.LASF32
 1129 023d 01       		.byte	0x1
 1130 023e EB03     		.2byte	0x3eb
 1131 0240 6B000000 		.4byte	0x6b
 1132 0244 00000000 		.4byte	.LFB8
 1133 0248 0C000000 		.4byte	.LFE8-.LFB8
 1134 024c 01       		.uleb128 0x1
 1135 024d 9C       		.byte	0x9c
 1136 024e 0D       		.uleb128 0xd
 1137 024f 55020000 		.4byte	.LASF33
 1138 0253 01       		.byte	0x1
 1139 0254 1104     		.2byte	0x411
 1140 0256 00000000 		.4byte	.LFB9
 1141 025a 70000000 		.4byte	.LFE9-.LFB9
 1142 025e 01       		.uleb128 0x1
 1143 025f 9C       		.byte	0x9c
 1144 0260 91020000 		.4byte	0x291
 1145 0264 0E       		.uleb128 0xe
 1146 0265 0A030000 		.4byte	.LASF30
 1147 0269 01       		.byte	0x1
 1148 026a 1104     		.2byte	0x411
 1149 026c 6B000000 		.4byte	0x6b
 1150 0270 01       		.uleb128 0x1
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 49


 1151 0271 50       		.byte	0x50
 1152 0272 0F       		.uleb128 0xf
 1153 0273 C9020000 		.4byte	.LASF34
 1154 0277 01       		.byte	0x1
 1155 0278 1804     		.2byte	0x418
 1156 027a 6B000000 		.4byte	0x6b
 1157 027e 01       		.uleb128 0x1
 1158 027f 51       		.byte	0x51
 1159 0280 10       		.uleb128 0x10
 1160 0281 4B030000 		.4byte	.LASF35
 1161 0285 01       		.byte	0x1
 1162 0286 1904     		.2byte	0x419
 1163 0288 6B000000 		.4byte	0x6b
 1164 028c 26000000 		.4byte	.LLST2
 1165 0290 00       		.byte	0
 1166 0291 0D       		.uleb128 0xd
 1167 0292 BC030000 		.4byte	.LASF36
 1168 0296 01       		.byte	0x1
 1169 0297 7904     		.2byte	0x479
 1170 0299 00000000 		.4byte	.LFB10
 1171 029d 24000000 		.4byte	.LFE10-.LFB10
 1172 02a1 01       		.uleb128 0x1
 1173 02a2 9C       		.byte	0x9c
 1174 02a3 D1020000 		.4byte	0x2d1
 1175 02a7 11       		.uleb128 0x11
 1176 02a8 E5000000 		.4byte	.LASF37
 1177 02ac 01       		.byte	0x1
 1178 02ad 7904     		.2byte	0x479
 1179 02af D1020000 		.4byte	0x2d1
 1180 02b3 39000000 		.4byte	.LLST3
 1181 02b7 10       		.uleb128 0x10
 1182 02b8 B1020000 		.4byte	.LASF38
 1183 02bc 01       		.byte	0x1
 1184 02bd 7B04     		.2byte	0x47b
 1185 02bf 77000000 		.4byte	0x77
 1186 02c3 7B000000 		.4byte	.LLST4
 1187 02c7 0B       		.uleb128 0xb
 1188 02c8 0E000000 		.4byte	.LVL20
 1189 02cc 4E020000 		.4byte	0x24e
 1190 02d0 00       		.byte	0
 1191 02d1 12       		.uleb128 0x12
 1192 02d2 04       		.byte	0x4
 1193 02d3 D7020000 		.4byte	0x2d7
 1194 02d7 13       		.uleb128 0x13
 1195 02d8 9D000000 		.4byte	0x9d
 1196 02dc 0D       		.uleb128 0xd
 1197 02dd EB020000 		.4byte	.LASF39
 1198 02e1 01       		.byte	0x1
 1199 02e2 A704     		.2byte	0x4a7
 1200 02e4 00000000 		.4byte	.LFB11
 1201 02e8 28000000 		.4byte	.LFE11-.LFB11
 1202 02ec 01       		.uleb128 0x1
 1203 02ed 9C       		.byte	0x9c
 1204 02ee 2C030000 		.4byte	0x32c
 1205 02f2 11       		.uleb128 0x11
 1206 02f3 E5000000 		.4byte	.LASF37
 1207 02f7 01       		.byte	0x1
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 50


 1208 02f8 A704     		.2byte	0x4a7
 1209 02fa 2C030000 		.4byte	0x32c
 1210 02fe BC000000 		.4byte	.LLST5
 1211 0302 11       		.uleb128 0x11
 1212 0303 EF010000 		.4byte	.LASF40
 1213 0307 01       		.byte	0x1
 1214 0308 A704     		.2byte	0x4a7
 1215 030a 6B000000 		.4byte	0x6b
 1216 030e FE000000 		.4byte	.LLST6
 1217 0312 10       		.uleb128 0x10
 1218 0313 B1020000 		.4byte	.LASF38
 1219 0317 01       		.byte	0x1
 1220 0318 AA04     		.2byte	0x4aa
 1221 031a 6B000000 		.4byte	0x6b
 1222 031e 38010000 		.4byte	.LLST7
 1223 0322 0B       		.uleb128 0xb
 1224 0323 0E000000 		.4byte	.LVL28
 1225 0327 4E020000 		.4byte	0x24e
 1226 032b 00       		.byte	0
 1227 032c 12       		.uleb128 0x12
 1228 032d 04       		.byte	0x4
 1229 032e 32030000 		.4byte	0x332
 1230 0332 13       		.uleb128 0x13
 1231 0333 6B000000 		.4byte	0x6b
 1232 0337 0D       		.uleb128 0xd
 1233 0338 BA020000 		.4byte	.LASF41
 1234 033c 01       		.byte	0x1
 1235 033d CE04     		.2byte	0x4ce
 1236 033f 00000000 		.4byte	.LFB12
 1237 0343 20000000 		.4byte	.LFE12-.LFB12
 1238 0347 01       		.uleb128 0x1
 1239 0348 9C       		.byte	0x9c
 1240 0349 89030000 		.4byte	0x389
 1241 034d 11       		.uleb128 0x11
 1242 034e 0A030000 		.4byte	.LASF30
 1243 0352 01       		.byte	0x1
 1244 0353 CE04     		.2byte	0x4ce
 1245 0355 6B000000 		.4byte	0x6b
 1246 0359 79010000 		.4byte	.LLST8
 1247 035d 0B       		.uleb128 0xb
 1248 035e 0C000000 		.4byte	.LVL35
 1249 0362 4E020000 		.4byte	0x24e
 1250 0366 07       		.uleb128 0x7
 1251 0367 12000000 		.4byte	.LVL36
 1252 036b 4E020000 		.4byte	0x24e
 1253 036f 79030000 		.4byte	0x379
 1254 0373 08       		.uleb128 0x8
 1255 0374 01       		.uleb128 0x1
 1256 0375 50       		.byte	0x50
 1257 0376 01       		.uleb128 0x1
 1258 0377 3D       		.byte	0x3d
 1259 0378 00       		.byte	0
 1260 0379 09       		.uleb128 0x9
 1261 037a 18000000 		.4byte	.LVL37
 1262 037e 4E020000 		.4byte	0x24e
 1263 0382 08       		.uleb128 0x8
 1264 0383 01       		.uleb128 0x1
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 51


 1265 0384 50       		.byte	0x50
 1266 0385 01       		.uleb128 0x1
 1267 0386 3A       		.byte	0x3a
 1268 0387 00       		.byte	0
 1269 0388 00       		.byte	0
 1270 0389 14       		.uleb128 0x14
 1271 038a 84020000 		.4byte	.LASF61
 1272 038e 01       		.byte	0x1
 1273 038f F904     		.2byte	0x4f9
 1274 0391 6B000000 		.4byte	0x6b
 1275 0395 00000000 		.4byte	.LFB13
 1276 0399 48000000 		.4byte	.LFE13-.LFB13
 1277 039d 01       		.uleb128 0x1
 1278 039e 9C       		.byte	0x9c
 1279 039f B4030000 		.4byte	0x3b4
 1280 03a3 10       		.uleb128 0x10
 1281 03a4 CD030000 		.4byte	.LASF42
 1282 03a8 01       		.byte	0x1
 1283 03a9 FC04     		.2byte	0x4fc
 1284 03ab 6B000000 		.4byte	0x6b
 1285 03af 9A010000 		.4byte	.LLST9
 1286 03b3 00       		.byte	0
 1287 03b4 0D       		.uleb128 0xd
 1288 03b5 36030000 		.4byte	.LASF43
 1289 03b9 01       		.byte	0x1
 1290 03ba 4A05     		.2byte	0x54a
 1291 03bc 00000000 		.4byte	.LFB14
 1292 03c0 40000000 		.4byte	.LFE14-.LFB14
 1293 03c4 01       		.uleb128 0x1
 1294 03c5 9C       		.byte	0x9c
 1295 03c6 ED030000 		.4byte	0x3ed
 1296 03ca 10       		.uleb128 0x10
 1297 03cb F9010000 		.4byte	.LASF24
 1298 03cf 01       		.byte	0x1
 1299 03d0 4C05     		.2byte	0x54c
 1300 03d2 6B000000 		.4byte	0x6b
 1301 03d6 C3010000 		.4byte	.LLST10
 1302 03da 0B       		.uleb128 0xb
 1303 03db 06000000 		.4byte	.LVL43
 1304 03df D4040000 		.4byte	0x4d4
 1305 03e3 0B       		.uleb128 0xb
 1306 03e4 1C000000 		.4byte	.LVL44
 1307 03e8 DF040000 		.4byte	0x4df
 1308 03ec 00       		.byte	0
 1309 03ed 0D       		.uleb128 0xd
 1310 03ee DA020000 		.4byte	.LASF44
 1311 03f2 01       		.byte	0x1
 1312 03f3 A005     		.2byte	0x5a0
 1313 03f5 00000000 		.4byte	.LFB15
 1314 03f9 58000000 		.4byte	.LFE15-.LFB15
 1315 03fd 01       		.uleb128 0x1
 1316 03fe 9C       		.byte	0x9c
 1317 03ff 40040000 		.4byte	0x440
 1318 0403 11       		.uleb128 0x11
 1319 0404 1B030000 		.4byte	.LASF45
 1320 0408 01       		.byte	0x1
 1321 0409 A005     		.2byte	0x5a0
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 52


 1322 040b 6B000000 		.4byte	0x6b
 1323 040f D6010000 		.4byte	.LLST11
 1324 0413 15       		.uleb128 0x15
 1325 0414 06000000 		.4byte	.LBB2
 1326 0418 52000000 		.4byte	.LBE2-.LBB2
 1327 041c 10       		.uleb128 0x10
 1328 041d 72000000 		.4byte	.LASF46
 1329 0421 01       		.byte	0x1
 1330 0422 A805     		.2byte	0x5a8
 1331 0424 6B000000 		.4byte	0x6b
 1332 0428 F7010000 		.4byte	.LLST12
 1333 042c 0F       		.uleb128 0xf
 1334 042d 79030000 		.4byte	.LASF47
 1335 0431 01       		.byte	0x1
 1336 0432 D005     		.2byte	0x5d0
 1337 0434 6B000000 		.4byte	0x6b
 1338 0438 05       		.uleb128 0x5
 1339 0439 03       		.byte	0x3
 1340 043a 03000000 		.4byte	txPeriod.5041
 1341 043e 00       		.byte	0
 1342 043f 00       		.byte	0
 1343 0440 0D       		.uleb128 0xd
 1344 0441 B9000000 		.4byte	.LASF48
 1345 0445 01       		.byte	0x1
 1346 0446 2406     		.2byte	0x624
 1347 0448 00000000 		.4byte	.LFB16
 1348 044c 02000000 		.4byte	.LFE16-.LFB16
 1349 0450 01       		.uleb128 0x1
 1350 0451 9C       		.byte	0x9c
 1351 0452 65040000 		.4byte	0x465
 1352 0456 0E       		.uleb128 0xe
 1353 0457 09010000 		.4byte	.LASF49
 1354 045b 01       		.byte	0x1
 1355 045c 2406     		.2byte	0x624
 1356 045e 6B000000 		.4byte	0x6b
 1357 0462 01       		.uleb128 0x1
 1358 0463 50       		.byte	0x50
 1359 0464 00       		.byte	0
 1360 0465 16       		.uleb128 0x16
 1361 0466 54000000 		.4byte	.LASF50
 1362 046a 01       		.byte	0x1
 1363 046b 1B       		.byte	0x1b
 1364 046c 6B000000 		.4byte	0x6b
 1365 0470 05       		.uleb128 0x5
 1366 0471 03       		.byte	0x3
 1367 0472 00000000 		.4byte	UART_1_initVar
 1368 0476 17       		.uleb128 0x17
 1369 0477 BC000000 		.4byte	0xbc
 1370 047b 86040000 		.4byte	0x486
 1371 047f 18       		.uleb128 0x18
 1372 0480 D9000000 		.4byte	0xd9
 1373 0484 27       		.byte	0x27
 1374 0485 00       		.byte	0
 1375 0486 16       		.uleb128 0x16
 1376 0487 D2030000 		.4byte	.LASF51
 1377 048b 01       		.byte	0x1
 1378 048c 1E       		.byte	0x1e
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 53


 1379 048d 97040000 		.4byte	0x497
 1380 0491 05       		.uleb128 0x5
 1381 0492 03       		.byte	0x3
 1382 0493 00000000 		.4byte	UART_1_txBuffer
 1383 0497 05       		.uleb128 0x5
 1384 0498 76040000 		.4byte	0x476
 1385 049c 16       		.uleb128 0x16
 1386 049d 9C030000 		.4byte	.LASF52
 1387 04a1 01       		.byte	0x1
 1388 04a2 1F       		.byte	0x1f
 1389 04a3 BC000000 		.4byte	0xbc
 1390 04a7 05       		.uleb128 0x5
 1391 04a8 03       		.byte	0x3
 1392 04a9 00000000 		.4byte	UART_1_txBufferRead
 1393 04ad 16       		.uleb128 0x16
 1394 04ae 5B030000 		.4byte	.LASF53
 1395 04b2 01       		.byte	0x1
 1396 04b3 20       		.byte	0x20
 1397 04b4 6B000000 		.4byte	0x6b
 1398 04b8 05       		.uleb128 0x5
 1399 04b9 03       		.byte	0x3
 1400 04ba 00000000 		.4byte	UART_1_txBufferWrite
 1401 04be 19       		.uleb128 0x19
 1402 04bf 63000000 		.4byte	.LASF54
 1403 04c3 63000000 		.4byte	.LASF54
 1404 04c7 03       		.byte	0x3
 1405 04c8 88       		.byte	0x88
 1406 04c9 19       		.uleb128 0x19
 1407 04ca 27000000 		.4byte	.LASF55
 1408 04ce 27000000 		.4byte	.LASF55
 1409 04d2 03       		.byte	0x3
 1410 04d3 8B       		.byte	0x8b
 1411 04d4 19       		.uleb128 0x19
 1412 04d5 3E020000 		.4byte	.LASF56
 1413 04d9 3E020000 		.4byte	.LASF56
 1414 04dd 03       		.byte	0x3
 1415 04de 7D       		.byte	0x7d
 1416 04df 19       		.uleb128 0x19
 1417 04e0 9B020000 		.4byte	.LASF57
 1418 04e4 9B020000 		.4byte	.LASF57
 1419 04e8 03       		.byte	0x3
 1420 04e9 7E       		.byte	0x7e
 1421 04ea 00       		.byte	0
 1422              		.section	.debug_abbrev,"",%progbits
 1423              	.Ldebug_abbrev0:
 1424 0000 01       		.uleb128 0x1
 1425 0001 11       		.uleb128 0x11
 1426 0002 01       		.byte	0x1
 1427 0003 25       		.uleb128 0x25
 1428 0004 0E       		.uleb128 0xe
 1429 0005 13       		.uleb128 0x13
 1430 0006 0B       		.uleb128 0xb
 1431 0007 03       		.uleb128 0x3
 1432 0008 0E       		.uleb128 0xe
 1433 0009 1B       		.uleb128 0x1b
 1434 000a 0E       		.uleb128 0xe
 1435 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 54


 1436 000c 17       		.uleb128 0x17
 1437 000d 11       		.uleb128 0x11
 1438 000e 01       		.uleb128 0x1
 1439 000f 10       		.uleb128 0x10
 1440 0010 17       		.uleb128 0x17
 1441 0011 00       		.byte	0
 1442 0012 00       		.byte	0
 1443 0013 02       		.uleb128 0x2
 1444 0014 24       		.uleb128 0x24
 1445 0015 00       		.byte	0
 1446 0016 0B       		.uleb128 0xb
 1447 0017 0B       		.uleb128 0xb
 1448 0018 3E       		.uleb128 0x3e
 1449 0019 0B       		.uleb128 0xb
 1450 001a 03       		.uleb128 0x3
 1451 001b 0E       		.uleb128 0xe
 1452 001c 00       		.byte	0
 1453 001d 00       		.byte	0
 1454 001e 03       		.uleb128 0x3
 1455 001f 24       		.uleb128 0x24
 1456 0020 00       		.byte	0
 1457 0021 0B       		.uleb128 0xb
 1458 0022 0B       		.uleb128 0xb
 1459 0023 3E       		.uleb128 0x3e
 1460 0024 0B       		.uleb128 0xb
 1461 0025 03       		.uleb128 0x3
 1462 0026 08       		.uleb128 0x8
 1463 0027 00       		.byte	0
 1464 0028 00       		.byte	0
 1465 0029 04       		.uleb128 0x4
 1466 002a 16       		.uleb128 0x16
 1467 002b 00       		.byte	0
 1468 002c 03       		.uleb128 0x3
 1469 002d 0E       		.uleb128 0xe
 1470 002e 3A       		.uleb128 0x3a
 1471 002f 0B       		.uleb128 0xb
 1472 0030 3B       		.uleb128 0x3b
 1473 0031 05       		.uleb128 0x5
 1474 0032 49       		.uleb128 0x49
 1475 0033 13       		.uleb128 0x13
 1476 0034 00       		.byte	0
 1477 0035 00       		.byte	0
 1478 0036 05       		.uleb128 0x5
 1479 0037 35       		.uleb128 0x35
 1480 0038 00       		.byte	0
 1481 0039 49       		.uleb128 0x49
 1482 003a 13       		.uleb128 0x13
 1483 003b 00       		.byte	0
 1484 003c 00       		.byte	0
 1485 003d 06       		.uleb128 0x6
 1486 003e 2E       		.uleb128 0x2e
 1487 003f 01       		.byte	0x1
 1488 0040 3F       		.uleb128 0x3f
 1489 0041 19       		.uleb128 0x19
 1490 0042 03       		.uleb128 0x3
 1491 0043 0E       		.uleb128 0xe
 1492 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 55


 1493 0045 0B       		.uleb128 0xb
 1494 0046 3B       		.uleb128 0x3b
 1495 0047 0B       		.uleb128 0xb
 1496 0048 27       		.uleb128 0x27
 1497 0049 19       		.uleb128 0x19
 1498 004a 11       		.uleb128 0x11
 1499 004b 01       		.uleb128 0x1
 1500 004c 12       		.uleb128 0x12
 1501 004d 06       		.uleb128 0x6
 1502 004e 40       		.uleb128 0x40
 1503 004f 18       		.uleb128 0x18
 1504 0050 9742     		.uleb128 0x2117
 1505 0052 19       		.uleb128 0x19
 1506 0053 01       		.uleb128 0x1
 1507 0054 13       		.uleb128 0x13
 1508 0055 00       		.byte	0
 1509 0056 00       		.byte	0
 1510 0057 07       		.uleb128 0x7
 1511 0058 898201   		.uleb128 0x4109
 1512 005b 01       		.byte	0x1
 1513 005c 11       		.uleb128 0x11
 1514 005d 01       		.uleb128 0x1
 1515 005e 31       		.uleb128 0x31
 1516 005f 13       		.uleb128 0x13
 1517 0060 01       		.uleb128 0x1
 1518 0061 13       		.uleb128 0x13
 1519 0062 00       		.byte	0
 1520 0063 00       		.byte	0
 1521 0064 08       		.uleb128 0x8
 1522 0065 8A8201   		.uleb128 0x410a
 1523 0068 00       		.byte	0
 1524 0069 02       		.uleb128 0x2
 1525 006a 18       		.uleb128 0x18
 1526 006b 9142     		.uleb128 0x2111
 1527 006d 18       		.uleb128 0x18
 1528 006e 00       		.byte	0
 1529 006f 00       		.byte	0
 1530 0070 09       		.uleb128 0x9
 1531 0071 898201   		.uleb128 0x4109
 1532 0074 01       		.byte	0x1
 1533 0075 11       		.uleb128 0x11
 1534 0076 01       		.uleb128 0x1
 1535 0077 31       		.uleb128 0x31
 1536 0078 13       		.uleb128 0x13
 1537 0079 00       		.byte	0
 1538 007a 00       		.byte	0
 1539 007b 0A       		.uleb128 0xa
 1540 007c 34       		.uleb128 0x34
 1541 007d 00       		.byte	0
 1542 007e 03       		.uleb128 0x3
 1543 007f 0E       		.uleb128 0xe
 1544 0080 3A       		.uleb128 0x3a
 1545 0081 0B       		.uleb128 0xb
 1546 0082 3B       		.uleb128 0x3b
 1547 0083 0B       		.uleb128 0xb
 1548 0084 49       		.uleb128 0x49
 1549 0085 13       		.uleb128 0x13
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 56


 1550 0086 02       		.uleb128 0x2
 1551 0087 17       		.uleb128 0x17
 1552 0088 00       		.byte	0
 1553 0089 00       		.byte	0
 1554 008a 0B       		.uleb128 0xb
 1555 008b 898201   		.uleb128 0x4109
 1556 008e 00       		.byte	0
 1557 008f 11       		.uleb128 0x11
 1558 0090 01       		.uleb128 0x1
 1559 0091 31       		.uleb128 0x31
 1560 0092 13       		.uleb128 0x13
 1561 0093 00       		.byte	0
 1562 0094 00       		.byte	0
 1563 0095 0C       		.uleb128 0xc
 1564 0096 2E       		.uleb128 0x2e
 1565 0097 00       		.byte	0
 1566 0098 3F       		.uleb128 0x3f
 1567 0099 19       		.uleb128 0x19
 1568 009a 03       		.uleb128 0x3
 1569 009b 0E       		.uleb128 0xe
 1570 009c 3A       		.uleb128 0x3a
 1571 009d 0B       		.uleb128 0xb
 1572 009e 3B       		.uleb128 0x3b
 1573 009f 05       		.uleb128 0x5
 1574 00a0 27       		.uleb128 0x27
 1575 00a1 19       		.uleb128 0x19
 1576 00a2 49       		.uleb128 0x49
 1577 00a3 13       		.uleb128 0x13
 1578 00a4 11       		.uleb128 0x11
 1579 00a5 01       		.uleb128 0x1
 1580 00a6 12       		.uleb128 0x12
 1581 00a7 06       		.uleb128 0x6
 1582 00a8 40       		.uleb128 0x40
 1583 00a9 18       		.uleb128 0x18
 1584 00aa 9742     		.uleb128 0x2117
 1585 00ac 19       		.uleb128 0x19
 1586 00ad 00       		.byte	0
 1587 00ae 00       		.byte	0
 1588 00af 0D       		.uleb128 0xd
 1589 00b0 2E       		.uleb128 0x2e
 1590 00b1 01       		.byte	0x1
 1591 00b2 3F       		.uleb128 0x3f
 1592 00b3 19       		.uleb128 0x19
 1593 00b4 03       		.uleb128 0x3
 1594 00b5 0E       		.uleb128 0xe
 1595 00b6 3A       		.uleb128 0x3a
 1596 00b7 0B       		.uleb128 0xb
 1597 00b8 3B       		.uleb128 0x3b
 1598 00b9 05       		.uleb128 0x5
 1599 00ba 27       		.uleb128 0x27
 1600 00bb 19       		.uleb128 0x19
 1601 00bc 11       		.uleb128 0x11
 1602 00bd 01       		.uleb128 0x1
 1603 00be 12       		.uleb128 0x12
 1604 00bf 06       		.uleb128 0x6
 1605 00c0 40       		.uleb128 0x40
 1606 00c1 18       		.uleb128 0x18
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 57


 1607 00c2 9742     		.uleb128 0x2117
 1608 00c4 19       		.uleb128 0x19
 1609 00c5 01       		.uleb128 0x1
 1610 00c6 13       		.uleb128 0x13
 1611 00c7 00       		.byte	0
 1612 00c8 00       		.byte	0
 1613 00c9 0E       		.uleb128 0xe
 1614 00ca 05       		.uleb128 0x5
 1615 00cb 00       		.byte	0
 1616 00cc 03       		.uleb128 0x3
 1617 00cd 0E       		.uleb128 0xe
 1618 00ce 3A       		.uleb128 0x3a
 1619 00cf 0B       		.uleb128 0xb
 1620 00d0 3B       		.uleb128 0x3b
 1621 00d1 05       		.uleb128 0x5
 1622 00d2 49       		.uleb128 0x49
 1623 00d3 13       		.uleb128 0x13
 1624 00d4 02       		.uleb128 0x2
 1625 00d5 18       		.uleb128 0x18
 1626 00d6 00       		.byte	0
 1627 00d7 00       		.byte	0
 1628 00d8 0F       		.uleb128 0xf
 1629 00d9 34       		.uleb128 0x34
 1630 00da 00       		.byte	0
 1631 00db 03       		.uleb128 0x3
 1632 00dc 0E       		.uleb128 0xe
 1633 00dd 3A       		.uleb128 0x3a
 1634 00de 0B       		.uleb128 0xb
 1635 00df 3B       		.uleb128 0x3b
 1636 00e0 05       		.uleb128 0x5
 1637 00e1 49       		.uleb128 0x49
 1638 00e2 13       		.uleb128 0x13
 1639 00e3 02       		.uleb128 0x2
 1640 00e4 18       		.uleb128 0x18
 1641 00e5 00       		.byte	0
 1642 00e6 00       		.byte	0
 1643 00e7 10       		.uleb128 0x10
 1644 00e8 34       		.uleb128 0x34
 1645 00e9 00       		.byte	0
 1646 00ea 03       		.uleb128 0x3
 1647 00eb 0E       		.uleb128 0xe
 1648 00ec 3A       		.uleb128 0x3a
 1649 00ed 0B       		.uleb128 0xb
 1650 00ee 3B       		.uleb128 0x3b
 1651 00ef 05       		.uleb128 0x5
 1652 00f0 49       		.uleb128 0x49
 1653 00f1 13       		.uleb128 0x13
 1654 00f2 02       		.uleb128 0x2
 1655 00f3 17       		.uleb128 0x17
 1656 00f4 00       		.byte	0
 1657 00f5 00       		.byte	0
 1658 00f6 11       		.uleb128 0x11
 1659 00f7 05       		.uleb128 0x5
 1660 00f8 00       		.byte	0
 1661 00f9 03       		.uleb128 0x3
 1662 00fa 0E       		.uleb128 0xe
 1663 00fb 3A       		.uleb128 0x3a
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 58


 1664 00fc 0B       		.uleb128 0xb
 1665 00fd 3B       		.uleb128 0x3b
 1666 00fe 05       		.uleb128 0x5
 1667 00ff 49       		.uleb128 0x49
 1668 0100 13       		.uleb128 0x13
 1669 0101 02       		.uleb128 0x2
 1670 0102 17       		.uleb128 0x17
 1671 0103 00       		.byte	0
 1672 0104 00       		.byte	0
 1673 0105 12       		.uleb128 0x12
 1674 0106 0F       		.uleb128 0xf
 1675 0107 00       		.byte	0
 1676 0108 0B       		.uleb128 0xb
 1677 0109 0B       		.uleb128 0xb
 1678 010a 49       		.uleb128 0x49
 1679 010b 13       		.uleb128 0x13
 1680 010c 00       		.byte	0
 1681 010d 00       		.byte	0
 1682 010e 13       		.uleb128 0x13
 1683 010f 26       		.uleb128 0x26
 1684 0110 00       		.byte	0
 1685 0111 49       		.uleb128 0x49
 1686 0112 13       		.uleb128 0x13
 1687 0113 00       		.byte	0
 1688 0114 00       		.byte	0
 1689 0115 14       		.uleb128 0x14
 1690 0116 2E       		.uleb128 0x2e
 1691 0117 01       		.byte	0x1
 1692 0118 3F       		.uleb128 0x3f
 1693 0119 19       		.uleb128 0x19
 1694 011a 03       		.uleb128 0x3
 1695 011b 0E       		.uleb128 0xe
 1696 011c 3A       		.uleb128 0x3a
 1697 011d 0B       		.uleb128 0xb
 1698 011e 3B       		.uleb128 0x3b
 1699 011f 05       		.uleb128 0x5
 1700 0120 27       		.uleb128 0x27
 1701 0121 19       		.uleb128 0x19
 1702 0122 49       		.uleb128 0x49
 1703 0123 13       		.uleb128 0x13
 1704 0124 11       		.uleb128 0x11
 1705 0125 01       		.uleb128 0x1
 1706 0126 12       		.uleb128 0x12
 1707 0127 06       		.uleb128 0x6
 1708 0128 40       		.uleb128 0x40
 1709 0129 18       		.uleb128 0x18
 1710 012a 9742     		.uleb128 0x2117
 1711 012c 19       		.uleb128 0x19
 1712 012d 01       		.uleb128 0x1
 1713 012e 13       		.uleb128 0x13
 1714 012f 00       		.byte	0
 1715 0130 00       		.byte	0
 1716 0131 15       		.uleb128 0x15
 1717 0132 0B       		.uleb128 0xb
 1718 0133 01       		.byte	0x1
 1719 0134 11       		.uleb128 0x11
 1720 0135 01       		.uleb128 0x1
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 59


 1721 0136 12       		.uleb128 0x12
 1722 0137 06       		.uleb128 0x6
 1723 0138 00       		.byte	0
 1724 0139 00       		.byte	0
 1725 013a 16       		.uleb128 0x16
 1726 013b 34       		.uleb128 0x34
 1727 013c 00       		.byte	0
 1728 013d 03       		.uleb128 0x3
 1729 013e 0E       		.uleb128 0xe
 1730 013f 3A       		.uleb128 0x3a
 1731 0140 0B       		.uleb128 0xb
 1732 0141 3B       		.uleb128 0x3b
 1733 0142 0B       		.uleb128 0xb
 1734 0143 49       		.uleb128 0x49
 1735 0144 13       		.uleb128 0x13
 1736 0145 3F       		.uleb128 0x3f
 1737 0146 19       		.uleb128 0x19
 1738 0147 02       		.uleb128 0x2
 1739 0148 18       		.uleb128 0x18
 1740 0149 00       		.byte	0
 1741 014a 00       		.byte	0
 1742 014b 17       		.uleb128 0x17
 1743 014c 01       		.uleb128 0x1
 1744 014d 01       		.byte	0x1
 1745 014e 49       		.uleb128 0x49
 1746 014f 13       		.uleb128 0x13
 1747 0150 01       		.uleb128 0x1
 1748 0151 13       		.uleb128 0x13
 1749 0152 00       		.byte	0
 1750 0153 00       		.byte	0
 1751 0154 18       		.uleb128 0x18
 1752 0155 21       		.uleb128 0x21
 1753 0156 00       		.byte	0
 1754 0157 49       		.uleb128 0x49
 1755 0158 13       		.uleb128 0x13
 1756 0159 2F       		.uleb128 0x2f
 1757 015a 0B       		.uleb128 0xb
 1758 015b 00       		.byte	0
 1759 015c 00       		.byte	0
 1760 015d 19       		.uleb128 0x19
 1761 015e 2E       		.uleb128 0x2e
 1762 015f 00       		.byte	0
 1763 0160 3F       		.uleb128 0x3f
 1764 0161 19       		.uleb128 0x19
 1765 0162 3C       		.uleb128 0x3c
 1766 0163 19       		.uleb128 0x19
 1767 0164 6E       		.uleb128 0x6e
 1768 0165 0E       		.uleb128 0xe
 1769 0166 03       		.uleb128 0x3
 1770 0167 0E       		.uleb128 0xe
 1771 0168 3A       		.uleb128 0x3a
 1772 0169 0B       		.uleb128 0xb
 1773 016a 3B       		.uleb128 0x3b
 1774 016b 0B       		.uleb128 0xb
 1775 016c 00       		.byte	0
 1776 016d 00       		.byte	0
 1777 016e 00       		.byte	0
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 60


 1778              		.section	.debug_loc,"",%progbits
 1779              	.Ldebug_loc0:
 1780              	.LLST0:
 1781 0000 06000000 		.4byte	.LVL2
 1782 0004 1F000000 		.4byte	.LVL3-1
 1783 0008 0100     		.2byte	0x1
 1784 000a 50       		.byte	0x50
 1785 000b 00000000 		.4byte	0
 1786 000f 00000000 		.4byte	0
 1787              	.LLST1:
 1788 0013 06000000 		.4byte	.LVL6
 1789 0017 19000000 		.4byte	.LVL7-1
 1790 001b 0100     		.2byte	0x1
 1791 001d 50       		.byte	0x50
 1792 001e 00000000 		.4byte	0
 1793 0022 00000000 		.4byte	0
 1794              	.LLST2:
 1795 0026 08000000 		.4byte	.LVL13
 1796 002a 2C000000 		.4byte	.LVL14
 1797 002e 0100     		.2byte	0x1
 1798 0030 53       		.byte	0x53
 1799 0031 00000000 		.4byte	0
 1800 0035 00000000 		.4byte	0
 1801              	.LLST3:
 1802 0039 00000000 		.4byte	.LVL17
 1803 003d 0A000000 		.4byte	.LVL19
 1804 0041 0100     		.2byte	0x1
 1805 0043 50       		.byte	0x50
 1806 0044 0A000000 		.4byte	.LVL19
 1807 0048 14000000 		.4byte	.LVL23
 1808 004c 0100     		.2byte	0x1
 1809 004e 55       		.byte	0x55
 1810 004f 14000000 		.4byte	.LVL23
 1811 0053 18000000 		.4byte	.LVL24
 1812 0057 0100     		.2byte	0x1
 1813 0059 50       		.byte	0x50
 1814 005a 18000000 		.4byte	.LVL24
 1815 005e 20000000 		.4byte	.LVL25
 1816 0062 0100     		.2byte	0x1
 1817 0064 55       		.byte	0x55
 1818 0065 20000000 		.4byte	.LVL25
 1819 0069 24000000 		.4byte	.LFE10
 1820 006d 0400     		.2byte	0x4
 1821 006f F3       		.byte	0xf3
 1822 0070 01       		.uleb128 0x1
 1823 0071 50       		.byte	0x50
 1824 0072 9F       		.byte	0x9f
 1825 0073 00000000 		.4byte	0
 1826 0077 00000000 		.4byte	0
 1827              	.LLST4:
 1828 007b 02000000 		.4byte	.LVL18
 1829 007f 0A000000 		.4byte	.LVL19
 1830 0083 0200     		.2byte	0x2
 1831 0085 30       		.byte	0x30
 1832 0086 9F       		.byte	0x9f
 1833 0087 0A000000 		.4byte	.LVL19
 1834 008b 10000000 		.4byte	.LVL21
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 61


 1835 008f 0100     		.2byte	0x1
 1836 0091 54       		.byte	0x54
 1837 0092 12000000 		.4byte	.LVL22
 1838 0096 14000000 		.4byte	.LVL23
 1839 009a 0100     		.2byte	0x1
 1840 009c 54       		.byte	0x54
 1841 009d 14000000 		.4byte	.LVL23
 1842 00a1 18000000 		.4byte	.LVL24
 1843 00a5 0200     		.2byte	0x2
 1844 00a7 30       		.byte	0x30
 1845 00a8 9F       		.byte	0x9f
 1846 00a9 18000000 		.4byte	.LVL24
 1847 00ad 20000000 		.4byte	.LVL25
 1848 00b1 0100     		.2byte	0x1
 1849 00b3 54       		.byte	0x54
 1850 00b4 00000000 		.4byte	0
 1851 00b8 00000000 		.4byte	0
 1852              	.LLST5:
 1853 00bc 00000000 		.4byte	.LVL26
 1854 00c0 08000000 		.4byte	.LVL27
 1855 00c4 0100     		.2byte	0x1
 1856 00c6 50       		.byte	0x50
 1857 00c7 08000000 		.4byte	.LVL27
 1858 00cb 14000000 		.4byte	.LVL31
 1859 00cf 0100     		.2byte	0x1
 1860 00d1 56       		.byte	0x56
 1861 00d2 14000000 		.4byte	.LVL31
 1862 00d6 1C000000 		.4byte	.LVL32
 1863 00da 0100     		.2byte	0x1
 1864 00dc 50       		.byte	0x50
 1865 00dd 1C000000 		.4byte	.LVL32
 1866 00e1 22000000 		.4byte	.LVL33
 1867 00e5 0100     		.2byte	0x1
 1868 00e7 56       		.byte	0x56
 1869 00e8 22000000 		.4byte	.LVL33
 1870 00ec 28000000 		.4byte	.LFE11
 1871 00f0 0400     		.2byte	0x4
 1872 00f2 F3       		.byte	0xf3
 1873 00f3 01       		.uleb128 0x1
 1874 00f4 50       		.byte	0x50
 1875 00f5 9F       		.byte	0x9f
 1876 00f6 00000000 		.4byte	0
 1877 00fa 00000000 		.4byte	0
 1878              	.LLST6:
 1879 00fe 00000000 		.4byte	.LVL26
 1880 0102 08000000 		.4byte	.LVL27
 1881 0106 0100     		.2byte	0x1
 1882 0108 51       		.byte	0x51
 1883 0109 08000000 		.4byte	.LVL27
 1884 010d 14000000 		.4byte	.LVL31
 1885 0111 0400     		.2byte	0x4
 1886 0113 F3       		.byte	0xf3
 1887 0114 01       		.uleb128 0x1
 1888 0115 51       		.byte	0x51
 1889 0116 9F       		.byte	0x9f
 1890 0117 14000000 		.4byte	.LVL31
 1891 011b 1C000000 		.4byte	.LVL32
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 62


 1892 011f 0100     		.2byte	0x1
 1893 0121 51       		.byte	0x51
 1894 0122 1C000000 		.4byte	.LVL32
 1895 0126 28000000 		.4byte	.LFE11
 1896 012a 0400     		.2byte	0x4
 1897 012c F3       		.byte	0xf3
 1898 012d 01       		.uleb128 0x1
 1899 012e 51       		.byte	0x51
 1900 012f 9F       		.byte	0x9f
 1901 0130 00000000 		.4byte	0
 1902 0134 00000000 		.4byte	0
 1903              	.LLST7:
 1904 0138 00000000 		.4byte	.LVL26
 1905 013c 08000000 		.4byte	.LVL27
 1906 0140 0200     		.2byte	0x2
 1907 0142 30       		.byte	0x30
 1908 0143 9F       		.byte	0x9f
 1909 0144 08000000 		.4byte	.LVL27
 1910 0148 10000000 		.4byte	.LVL29
 1911 014c 0100     		.2byte	0x1
 1912 014e 54       		.byte	0x54
 1913 014f 12000000 		.4byte	.LVL30
 1914 0153 14000000 		.4byte	.LVL31
 1915 0157 0100     		.2byte	0x1
 1916 0159 54       		.byte	0x54
 1917 015a 14000000 		.4byte	.LVL31
 1918 015e 1C000000 		.4byte	.LVL32
 1919 0162 0200     		.2byte	0x2
 1920 0164 30       		.byte	0x30
 1921 0165 9F       		.byte	0x9f
 1922 0166 1C000000 		.4byte	.LVL32
 1923 016a 22000000 		.4byte	.LVL33
 1924 016e 0100     		.2byte	0x1
 1925 0170 54       		.byte	0x54
 1926 0171 00000000 		.4byte	0
 1927 0175 00000000 		.4byte	0
 1928              	.LLST8:
 1929 0179 00000000 		.4byte	.LVL34
 1930 017d 0B000000 		.4byte	.LVL35-1
 1931 0181 0100     		.2byte	0x1
 1932 0183 50       		.byte	0x50
 1933 0184 0B000000 		.4byte	.LVL35-1
 1934 0188 20000000 		.4byte	.LFE12
 1935 018c 0400     		.2byte	0x4
 1936 018e F3       		.byte	0xf3
 1937 018f 01       		.uleb128 0x1
 1938 0190 50       		.byte	0x50
 1939 0191 9F       		.byte	0x9f
 1940 0192 00000000 		.4byte	0
 1941 0196 00000000 		.4byte	0
 1942              	.LLST9:
 1943 019a 24000000 		.4byte	.LVL38
 1944 019e 26000000 		.4byte	.LVL39
 1945 01a2 0100     		.2byte	0x1
 1946 01a4 50       		.byte	0x50
 1947 01a5 30000000 		.4byte	.LVL40
 1948 01a9 32000000 		.4byte	.LVL41
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 63


 1949 01ad 0100     		.2byte	0x1
 1950 01af 50       		.byte	0x50
 1951 01b0 34000000 		.4byte	.LVL42
 1952 01b4 48000000 		.4byte	.LFE13
 1953 01b8 0100     		.2byte	0x1
 1954 01ba 50       		.byte	0x50
 1955 01bb 00000000 		.4byte	0
 1956 01bf 00000000 		.4byte	0
 1957              	.LLST10:
 1958 01c3 06000000 		.4byte	.LVL43
 1959 01c7 1B000000 		.4byte	.LVL44-1
 1960 01cb 0100     		.2byte	0x1
 1961 01cd 50       		.byte	0x50
 1962 01ce 00000000 		.4byte	0
 1963 01d2 00000000 		.4byte	0
 1964              	.LLST11:
 1965 01d6 00000000 		.4byte	.LVL45
 1966 01da 3C000000 		.4byte	.LVL50
 1967 01de 0100     		.2byte	0x1
 1968 01e0 50       		.byte	0x50
 1969 01e1 3C000000 		.4byte	.LVL50
 1970 01e5 58000000 		.4byte	.LFE15
 1971 01e9 0400     		.2byte	0x4
 1972 01eb F3       		.byte	0xf3
 1973 01ec 01       		.uleb128 0x1
 1974 01ed 50       		.byte	0x50
 1975 01ee 9F       		.byte	0x9f
 1976 01ef 00000000 		.4byte	0
 1977 01f3 00000000 		.4byte	0
 1978              	.LLST12:
 1979 01f7 22000000 		.4byte	.LVL46
 1980 01fb 28000000 		.4byte	.LVL47
 1981 01ff 0100     		.2byte	0x1
 1982 0201 53       		.byte	0x53
 1983 0202 34000000 		.4byte	.LVL48
 1984 0206 3A000000 		.4byte	.LVL49
 1985 020a 0100     		.2byte	0x1
 1986 020c 53       		.byte	0x53
 1987 020d 00000000 		.4byte	0
 1988 0211 00000000 		.4byte	0
 1989              		.section	.debug_aranges,"",%progbits
 1990 0000 9C000000 		.4byte	0x9c
 1991 0004 0200     		.2byte	0x2
 1992 0006 00000000 		.4byte	.Ldebug_info0
 1993 000a 04       		.byte	0x4
 1994 000b 00       		.byte	0
 1995 000c 0000     		.2byte	0
 1996 000e 0000     		.2byte	0
 1997 0010 00000000 		.4byte	.LFB1
 1998 0014 30000000 		.4byte	.LFE1-.LFB1
 1999 0018 00000000 		.4byte	.LFB2
 2000 001c 2C000000 		.4byte	.LFE2-.LFB2
 2001 0020 00000000 		.4byte	.LFB0
 2002 0024 1C000000 		.4byte	.LFE0-.LFB0
 2003 0028 00000000 		.4byte	.LFB3
 2004 002c 24000000 		.4byte	.LFE3-.LFB3
 2005 0030 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 64


 2006 0034 04000000 		.4byte	.LFE4-.LFB4
 2007 0038 00000000 		.4byte	.LFB5
 2008 003c 02000000 		.4byte	.LFE5-.LFB5
 2009 0040 00000000 		.4byte	.LFB6
 2010 0044 0C000000 		.4byte	.LFE6-.LFB6
 2011 0048 00000000 		.4byte	.LFB7
 2012 004c 60000000 		.4byte	.LFE7-.LFB7
 2013 0050 00000000 		.4byte	.LFB8
 2014 0054 0C000000 		.4byte	.LFE8-.LFB8
 2015 0058 00000000 		.4byte	.LFB9
 2016 005c 70000000 		.4byte	.LFE9-.LFB9
 2017 0060 00000000 		.4byte	.LFB10
 2018 0064 24000000 		.4byte	.LFE10-.LFB10
 2019 0068 00000000 		.4byte	.LFB11
 2020 006c 28000000 		.4byte	.LFE11-.LFB11
 2021 0070 00000000 		.4byte	.LFB12
 2022 0074 20000000 		.4byte	.LFE12-.LFB12
 2023 0078 00000000 		.4byte	.LFB13
 2024 007c 48000000 		.4byte	.LFE13-.LFB13
 2025 0080 00000000 		.4byte	.LFB14
 2026 0084 40000000 		.4byte	.LFE14-.LFB14
 2027 0088 00000000 		.4byte	.LFB15
 2028 008c 58000000 		.4byte	.LFE15-.LFB15
 2029 0090 00000000 		.4byte	.LFB16
 2030 0094 02000000 		.4byte	.LFE16-.LFB16
 2031 0098 00000000 		.4byte	0
 2032 009c 00000000 		.4byte	0
 2033              		.section	.debug_ranges,"",%progbits
 2034              	.Ldebug_ranges0:
 2035 0000 00000000 		.4byte	.LFB1
 2036 0004 30000000 		.4byte	.LFE1
 2037 0008 00000000 		.4byte	.LFB2
 2038 000c 2C000000 		.4byte	.LFE2
 2039 0010 00000000 		.4byte	.LFB0
 2040 0014 1C000000 		.4byte	.LFE0
 2041 0018 00000000 		.4byte	.LFB3
 2042 001c 24000000 		.4byte	.LFE3
 2043 0020 00000000 		.4byte	.LFB4
 2044 0024 04000000 		.4byte	.LFE4
 2045 0028 00000000 		.4byte	.LFB5
 2046 002c 02000000 		.4byte	.LFE5
 2047 0030 00000000 		.4byte	.LFB6
 2048 0034 0C000000 		.4byte	.LFE6
 2049 0038 00000000 		.4byte	.LFB7
 2050 003c 60000000 		.4byte	.LFE7
 2051 0040 00000000 		.4byte	.LFB8
 2052 0044 0C000000 		.4byte	.LFE8
 2053 0048 00000000 		.4byte	.LFB9
 2054 004c 70000000 		.4byte	.LFE9
 2055 0050 00000000 		.4byte	.LFB10
 2056 0054 24000000 		.4byte	.LFE10
 2057 0058 00000000 		.4byte	.LFB11
 2058 005c 28000000 		.4byte	.LFE11
 2059 0060 00000000 		.4byte	.LFB12
 2060 0064 20000000 		.4byte	.LFE12
 2061 0068 00000000 		.4byte	.LFB13
 2062 006c 48000000 		.4byte	.LFE13
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 65


 2063 0070 00000000 		.4byte	.LFB14
 2064 0074 40000000 		.4byte	.LFE14
 2065 0078 00000000 		.4byte	.LFB15
 2066 007c 58000000 		.4byte	.LFE15
 2067 0080 00000000 		.4byte	.LFB16
 2068 0084 02000000 		.4byte	.LFE16
 2069 0088 00000000 		.4byte	0
 2070 008c 00000000 		.4byte	0
 2071              		.section	.debug_line,"",%progbits
 2072              	.Ldebug_line0:
 2073 0000 12020000 		.section	.debug_str,"MS",%progbits,1
 2073      02004E00 
 2073      00000201 
 2073      FB0E0D00 
 2073      01010101 
 2074              	.LASF6:
 2075 0000 6C6F6E67 		.ascii	"long long int\000"
 2075      206C6F6E 
 2075      6720696E 
 2075      7400
 2076              	.LASF20:
 2077 000e 55415254 		.ascii	"UART_1_Init\000"
 2077      5F315F49 
 2077      6E697400 
 2078              	.LASF22:
 2079 001a 55415254 		.ascii	"UART_1_Start\000"
 2079      5F315F53 
 2079      74617274 
 2079      00
 2080              	.LASF55:
 2081 0027 4379496E 		.ascii	"CyIntSetPriority\000"
 2081      74536574 
 2081      5072696F 
 2081      72697479 
 2081      00
 2082              	.LASF25:
 2083 0038 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2083      5F315F57 
 2083      72697465 
 2083      436F6E74 
 2083      726F6C52 
 2084              	.LASF50:
 2085 0054 55415254 		.ascii	"UART_1_initVar\000"
 2085      5F315F69 
 2085      6E697456 
 2085      617200
 2086              	.LASF54:
 2087 0063 4379496E 		.ascii	"CyIntSetVector\000"
 2087      74536574 
 2087      56656374 
 2087      6F7200
 2088              	.LASF46:
 2089 0072 746D7053 		.ascii	"tmpStat\000"
 2089      74617400 
 2090              	.LASF26:
 2091 007a 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2091      5F315F53 
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 66


 2091      65745478 
 2091      496E7465 
 2091      72727570 
 2092              	.LASF3:
 2093 0094 73686F72 		.ascii	"short unsigned int\000"
 2093      7420756E 
 2093      7369676E 
 2093      65642069 
 2093      6E7400
 2094              	.LASF15:
 2095 00a7 63686172 		.ascii	"char\000"
 2095      00
 2096              	.LASF8:
 2097 00ac 756E7369 		.ascii	"unsigned int\000"
 2097      676E6564 
 2097      20696E74 
 2097      00
 2098              	.LASF48:
 2099 00b9 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2099      5F315F53 
 2099      65745478 
 2099      41646472 
 2099      6573734D 
 2100              	.LASF32:
 2101 00d1 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2101      5F315F52 
 2101      65616454 
 2101      78537461 
 2101      74757300 
 2102              	.LASF37:
 2103 00e5 73747269 		.ascii	"string\000"
 2103      6E6700
 2104              	.LASF12:
 2105 00ec 666C6F61 		.ascii	"float\000"
 2105      7400
 2106              	.LASF7:
 2107 00f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 2107      206C6F6E 
 2107      6720756E 
 2107      7369676E 
 2107      65642069 
 2108              	.LASF49:
 2109 0109 61646472 		.ascii	"addressMode\000"
 2109      6573734D 
 2109      6F646500 
 2110              	.LASF58:
 2111 0115 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2111      43313120 
 2111      352E342E 
 2111      31203230 
 2111      31363036 
 2112 0148 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2112      20726576 
 2112      6973696F 
 2112      6E203233 
 2112      37373135 
 2113 017b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 67


 2113      66756E63 
 2113      74696F6E 
 2113      2D736563 
 2113      74696F6E 
 2114              	.LASF16:
 2115 01a3 72656738 		.ascii	"reg8\000"
 2115      00
 2116              	.LASF31:
 2117 01a8 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2117      5F315F52 
 2117      65616443 
 2117      6F6E7472 
 2117      6F6C5265 
 2118              	.LASF23:
 2119 01c3 55415254 		.ascii	"UART_1_Stop\000"
 2119      5F315F53 
 2119      746F7000 
 2120              	.LASF5:
 2121 01cf 6C6F6E67 		.ascii	"long unsigned int\000"
 2121      20756E73 
 2121      69676E65 
 2121      6420696E 
 2121      7400
 2122              	.LASF9:
 2123 01e1 75696E74 		.ascii	"uint8\000"
 2123      3800
 2124              	.LASF27:
 2125 01e7 636F6E74 		.ascii	"control\000"
 2125      726F6C00 
 2126              	.LASF40:
 2127 01ef 62797465 		.ascii	"byteCount\000"
 2127      436F756E 
 2127      7400
 2128              	.LASF24:
 2129 01f9 656E6162 		.ascii	"enableInterrupts\000"
 2129      6C65496E 
 2129      74657272 
 2129      75707473 
 2129      00
 2130              	.LASF1:
 2131 020a 756E7369 		.ascii	"unsigned char\000"
 2131      676E6564 
 2131      20636861 
 2131      7200
 2132              	.LASF13:
 2133 0218 646F7562 		.ascii	"double\000"
 2133      6C6500
 2134              	.LASF28:
 2135 021f 696E7453 		.ascii	"intSrc\000"
 2135      726300
 2136              	.LASF2:
 2137 0226 73686F72 		.ascii	"short int\000"
 2137      7420696E 
 2137      7400
 2138              	.LASF10:
 2139 0230 75696E74 		.ascii	"uint16\000"
 2139      313600
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 68


 2140              	.LASF11:
 2141 0237 75696E74 		.ascii	"uint32\000"
 2141      333200
 2142              	.LASF56:
 2143 023e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2143      74657243 
 2143      72697469 
 2143      63616C53 
 2143      65637469 
 2144              	.LASF33:
 2145 0255 55415254 		.ascii	"UART_1_PutChar\000"
 2145      5F315F50 
 2145      75744368 
 2145      617200
 2146              	.LASF59:
 2147 0264 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1.c\000"
 2147      72617465 
 2147      645F536F 
 2147      75726365 
 2147      5C50536F 
 2148              	.LASF61:
 2149 0284 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2149      5F315F47 
 2149      65745478 
 2149      42756666 
 2149      65725369 
 2150              	.LASF57:
 2151 029b 43794578 		.ascii	"CyExitCriticalSection\000"
 2151      69744372 
 2151      69746963 
 2151      616C5365 
 2151      6374696F 
 2152              	.LASF38:
 2153 02b1 62756649 		.ascii	"bufIndex\000"
 2153      6E646578 
 2153      00
 2154              	.LASF41:
 2155 02ba 55415254 		.ascii	"UART_1_PutCRLF\000"
 2155      5F315F50 
 2155      75744352 
 2155      4C4600
 2156              	.LASF34:
 2157 02c9 6C6F6354 		.ascii	"locTxBufferWrite\000"
 2157      78427566 
 2157      66657257 
 2157      72697465 
 2157      00
 2158              	.LASF44:
 2159 02da 55415254 		.ascii	"UART_1_SendBreak\000"
 2159      5F315F53 
 2159      656E6442 
 2159      7265616B 
 2159      00
 2160              	.LASF39:
 2161 02eb 55415254 		.ascii	"UART_1_PutArray\000"
 2161      5F315F50 
 2161      75744172 
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 69


 2161      72617900 
 2162              	.LASF19:
 2163 02fb 73697A65 		.ascii	"sizetype\000"
 2163      74797065 
 2163      00
 2164              	.LASF14:
 2165 0304 63686172 		.ascii	"char8\000"
 2165      3800
 2166              	.LASF30:
 2167 030a 74784461 		.ascii	"txDataByte\000"
 2167      74614279 
 2167      746500
 2168              	.LASF17:
 2169 0315 72656733 		.ascii	"reg32\000"
 2169      3200
 2170              	.LASF45:
 2171 031b 7265744D 		.ascii	"retMode\000"
 2171      6F646500 
 2172              	.LASF29:
 2173 0323 55415254 		.ascii	"UART_1_WriteTxData\000"
 2173      5F315F57 
 2173      72697465 
 2173      54784461 
 2173      746100
 2174              	.LASF43:
 2175 0336 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2175      5F315F43 
 2175      6C656172 
 2175      54784275 
 2175      66666572 
 2176              	.LASF35:
 2177 034b 6C6F6354 		.ascii	"locTxBufferRead\000"
 2177      78427566 
 2177      66657252 
 2177      65616400 
 2178              	.LASF53:
 2179 035b 55415254 		.ascii	"UART_1_txBufferWrite\000"
 2179      5F315F74 
 2179      78427566 
 2179      66657257 
 2179      72697465 
 2180              	.LASF4:
 2181 0370 6C6F6E67 		.ascii	"long int\000"
 2181      20696E74 
 2181      00
 2182              	.LASF47:
 2183 0379 74785065 		.ascii	"txPeriod\000"
 2183      72696F64 
 2183      00
 2184              	.LASF21:
 2185 0382 55415254 		.ascii	"UART_1_Enable\000"
 2185      5F315F45 
 2185      6E61626C 
 2185      6500
 2186              	.LASF18:
 2187 0390 6C6F6E67 		.ascii	"long double\000"
 2187      20646F75 
ARM GAS  C:\Users\karth\AppData\Local\Temp\ccSepWWd.s 			page 70


 2187      626C6500 
 2188              	.LASF52:
 2189 039c 55415254 		.ascii	"UART_1_txBufferRead\000"
 2189      5F315F74 
 2189      78427566 
 2189      66657252 
 2189      65616400 
 2190              	.LASF0:
 2191 03b0 7369676E 		.ascii	"signed char\000"
 2191      65642063 
 2191      68617200 
 2192              	.LASF36:
 2193 03bc 55415254 		.ascii	"UART_1_PutString\000"
 2193      5F315F50 
 2193      75745374 
 2193      72696E67 
 2193      00
 2194              	.LASF42:
 2195 03cd 73697A65 		.ascii	"size\000"
 2195      00
 2196              	.LASF51:
 2197 03d2 55415254 		.ascii	"UART_1_txBuffer\000"
 2197      5F315F74 
 2197      78427566 
 2197      66657200 
 2198              	.LASF60:
 2199 03e2 433A5C55 		.ascii	"C:\\Users\\karth\\Downloads\\conductometry\\psoc-lo"
 2199      73657273 
 2199      5C6B6172 
 2199      74685C44 
 2199      6F776E6C 
 2200 0410 636B2D69 		.ascii	"ck-in-H2O-conductance\\Lock-in_H2O_02b.cydsn\000"
 2200      6E2D4832 
 2200      4F2D636F 
 2200      6E647563 
 2200      74616E63 
 2201              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
